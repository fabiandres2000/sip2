(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[2],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Servicios/caracterizacion_servicios */ "./resources/js/Servicios/caracterizacion_servicios.js");
/* harmony import */ var _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Servicios/barrios_servicios */ "./resources/js/Servicios/barrios_servicios.js");
/* harmony import */ var vuejs_datepicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vuejs-datepicker */ "./node_modules/vuejs-datepicker/dist/vuejs-datepicker.esm.js");
/* harmony import */ var vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vuejs-datepicker/dist/locale */ "./node_modules/vuejs-datepicker/dist/locale/index.js");
/* harmony import */ var vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vuelidate/lib/validators */ "./node_modules/vuelidate/lib/validators/index.js");
/* harmony import */ var vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var isPhoneNumber = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["helpers"].regex("numeric", /^3[0-9]{9}$/);
var alpha = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["helpers"].regex("alpha", /^[a-zA-Z]*$/);
var alphaNumAndDotValidator = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["helpers"].regex("alphaNumAndDot", /^[a-z\d.]*$/i);

var entero = function entero(value) {
  return /^[0-9]*$/.test(value);
};


/* harmony default export */ __webpack_exports__["default"] = ({
  components: {
    Datepicker: vuejs_datepicker__WEBPACK_IMPORTED_MODULE_3__["default"]
  },
  mounted: function mounted() {
    this.nuevo();
    this.hoy = moment();
  },
  filters: {
    moneda: function moneda(val) {
      var number = +val.replace(/[^\d.]/g, '');
      return isNaN(number) ? 0 : number;
    },
    moment: function (_moment) {
      function moment(_x) {
        return _moment.apply(this, arguments);
      }

      moment.toString = function () {
        return _moment.toString();
      };

      return moment;
    }(function (date) {
      return moment(date).format('YYYY-MM-DD');
    })
  },
  data: function data() {
    return {
      hoy: "",
      csrf: document.querySelector('meta[name="csrf-token"]').getAttribute("content"),
      dpto_options: [],
      muni_options: {},
      corregi_options: {},
      barrio_options: {},
      parentesco_options: {},
      estado_options: {},
      escolaridad_options: {},
      ocupacion_options: {},
      etnia_options: {},
      admini_options: {},
      clasifi_options: {},
      vereda_options: {},
      hogar: {
        id: 0,
        id_dpto: "",
        id_mun: "",
        id_corre: "",
        id_vereda: "",
        id_barrio: "",
        id_zona: "",
        tenencia_vivienda: "",
        numero_hogares: "",
        poblacion_especial: "",
        vias_acceso: "",
        servicios_publicos: "",
        direccion: ""
      },
      caracData: {
        id: 0,
        id_hogar: 0,
        telefono: "",
        puntaje_sisben: "",
        afiliacion_entidad: "",
        tipo_id: "",
        identificacion: "",
        sexo: "",
        parentesco: "",
        pnom: "",
        snom: "",
        pape: "",
        sape: "",
        salario: "",
        id_compania: "",
        estado: "",
        estado_civil: "",
        fecha_nacimiento: "",
        tipo_afiliacion: "",
        embarazo: "",
        embarazo_multiple: "",
        discapacidad: "",
        nivel_escolaridad: "",
        ocupacion: "",
        colegio: "",
        grado: "",
        etnia: "",
        clasificacion: "",
        entiende: "",
        pyp: "",
        migrante: "",
        edad: ""
      },
      CA1: {
        id: 0,
        tipo_id: "0",
        identificacion: "",
        sexo: "0",
        parentesco: "0",
        pnom: "",
        snom: "",
        pape: "",
        sape: "",
        estado_civil: "0",
        fecha_nac: "",
        edad: 0,
        afi_entidad: "0",
        tipo_afiliacion: "0",
        embarazo: "0",
        embarazo_multiple: "0",
        discapacidad: "0",
        escolaridad: "0",
        ocupacion: "0",
        colegio: "",
        grado: "0",
        entiende: "0",
        migrante: "0",
        pyp: "0",
        etnia: "0",
        clasificacion: "0"
      },
      viviendaData: {
        id: 0,
        tipo_vivienda: "",
        tipo_estructura: "",
        otro_tipo_estructura: "",
        numero_cuartos: "",
        personas_por_cuartos: "",
        material_predominante: "",
        tipo_cubierta: "",
        otro_tipo_cubierta: "",
        actividad_economica: "",
        cual_actividad_economica: "",
        evento_afecta_vivienda: "",
        familias_accion: "",
        promedio_ingresos: "",
        promedio_gastos: "",
        servicios_basicos: "",
        fuente_agua: "",
        cual_fuente: "",
        donde_almacena_agua: "",
        otro_almacena_agua: "",
        ubicacion_tanque: "",
        tipo_tratamiento_agua: "",
        destino_final_basura: "",
        otro_destino_final_basura: "",
        porquerizas: "",
        plagas: "",
        industrias: "",
        malos_olores: "",
        rellenos: "",
        contaminacion_a: "",
        contaminacion_v: "",
        rio: "",
        otro_cerca: "",
        cual_cerca: "",
        servicio_sanitario: "",
        donde_sanitario: "",
        excretas: "",
        cocina: "",
        dormitorio_a: "",
        sala: "",
        dormitorio_n: "",
        sanitario: "",
        lavadero: "",
        iluminacion_adecuada: "",
        techo_adecuado: "",
        ventilacion_adecuada: "",
        pisos_adecuado: "",
        paredes_adecuadas: "",
        gasolina: "",
        plaguicidas: "",
        detergentes: "",
        plaguicidas_insectos: "",
        envases_vacios: "",
        otro_envases_vacios: "",
        elementos_protecion: "",
        otro_elementos_protecion: "",
        metodos_coccion: "",
        otro_metodos_coccion: "",
        lugares_preparan_alimentos: "",
        lugares_almacenan_alimentos: "",
        otro_lugares_almacenan_alimentos: "",
        lava_frutas: ""
      },
      animalesData: [],
      animal: "",
      nombreAnimal: "",
      cuantosAnimal: "",
      vacunadoAnimal: "0",
      mOTE: false,
      mOTC: false,
      mOAE: false,
      mOFA: false,
      mODA: false,
      mOFB: false,
      mOOC: false,
      mOEV: false,
      mOEP: false,
      mOMC: false,
      mOAA: false,
      format: "yyyy-MM-dd",
      lenguaje: vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_4__["es"],
      claseAyuda: "form-control",
      datos: [],
      datosJefe: [],
      Men1A: [],
      De1A5: [],
      De6A11: [],
      De10A59: [],
      ParPost: [],
      De12A17: [],
      De18A28: [],
      De29A59: [],
      De60: [],
      EnCro: [],
      EnInf: [],
      Migra: []
    };
  },
  validations: {
    viviendaData: {
      tipo_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      tipo_estructura: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      numero_cuartos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["numeric"]
      },
      personas_por_cuartos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["numeric"]
      },
      material_predominante: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      tipo_cubierta: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      actividad_economica: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      evento_afecta_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      familias_accion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      promedio_ingresos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      promedio_gastos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      servicios_basicos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      fuente_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      donde_almacena_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      ubicacion_tanque: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      tipo_tratamiento_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      destino_final_basura: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      porquerizas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      plagas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      industrias: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      malos_olores: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      rellenos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      contaminacion_a: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      contaminacion_v: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      rio: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      otro_cerca: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      // cual_cerca: { required },
      servicio_sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      donde_sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      excretas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      cocina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      dormitorio_a: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      sala: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      dormitorio_n: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      lavadero: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      iluminacion_adecuada: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      techo_adecuado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      ventilacion_adecuada: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      pisos_adecuado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      paredes_adecuadas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      gasolina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      plaguicidas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      detergentes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      plaguicidas_insectos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      envases_vacios: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      elementos_protecion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      metodos_coccion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      lugares_preparan_alimentos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      lugares_almacenan_alimentos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      lava_frutas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      }
    },
    hogar: {
      id_dpto: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      id_mun: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      tenencia_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      numero_hogares: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["numeric"]
      },
      poblacion_especial: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      vias_acceso: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      servicios_publicos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      },
      direccion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_5__["required"]
      }
    }
  },
  computed: {
    calEdad: function calEdad() {
      var nacimiento = moment(this.CA1.fecha_nac);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      } // console.info(hoy);


      return edad;
    },
    calEdad2: function calEdad2() {
      var nacimiento = moment(this.caracData.fecha_nacimiento);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      }

      this.caracData.edad = edad;
      return edad;
    },
    wrongNumber: function wrongNumber() {
      return this.isNumeric(this.number) === false;
    },
    inputDisabled: function inputDisabled() {
      if (this.CA1.sexo === "MASCULINO") {
        this.CA1.embarazo = "NOAPLICA";
        this.CA1.embarazo_multiple = "NOAPLICA";
      } else {
        this.CA1.embarazo = "";
        this.CA1.embarazo_multiple = "";

        if (this.CA1.embarazo === "NO") {
          this.CA1.embarazo_multiple = "NO";
        } else {
          // this.CA1.embarazo = "0";
          this.CA1.embarazo_multiple = "0";
        }
      }

      return this.CA1.sexo === "MASCULINO";
    },
    inputDisabled2: function inputDisabled2() {
      if (this.caracData.sexo === "MASCULINO") {
        this.caracData.embarazo = "NOAPLICA";
        this.caracData.embarazo_multiple = "NOAPLICA";
      } else {
        this.caracData.embarazo = "";
        this.caracData.embarazo_multiple = "";

        if (this.caracData.embarazo === "NO") {
          this.caracData.embarazo_multiple = "NO";
        } else {
          // this.caracData.embarazo = "0";
          this.caracData.embarazo_multiple = "";
        }
      }

      return this.caracData.sexo === "MASCULINO";
    },
    soloNum: function soloNum() {// alert(this.Men1A.peso_nacer);
      // return this.Men1A.peso_nacer.replace( /[^\d]/g, '' ).trim();
    },
    calHoy: function calHoy() {
      var hoy = moment();
      return hoy;
    }
  },
  methods: {
    isNumeric: function isNumeric(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    },
    nuevo: function () {
      var _nuevo = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var _this = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                parametros = {
                  _token: this.csrf
                };
                _context.prev = 1;
                _context.next = 4;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["nuevaCaracterizacion"](parametros).then(function (respuesta) {
                  _this.dpto_options = respuesta.data.arrayDpto;
                  _this.muni_options = respuesta.data.arrayMuni;
                  _this.corregi_options = respuesta.data.arrayCorregi;
                  _this.vereda_options = respuesta.data.arrayVeredas; // this.barrio_options = respuesta.data.arrayBarrios;

                  _this.parentesco_options = respuesta.data.arrayParentesco;
                  _this.estado_options = respuesta.data.arrayEstado;
                  _this.escolaridad_options = respuesta.data.arrayEscolaridad;
                  _this.ocupacion_options = respuesta.data.arrayOcupacion;
                  _this.etnia_options = respuesta.data.arrayEtnia;
                  _this.admini_options = respuesta.data.arrayAdmini;
                  _this.clasifi_options = respuesta.data.arrayCLasifi;
                });

              case 4:
                _context.next = 15;
                break;

              case 6:
                _context.prev = 6;
                _context.t0 = _context["catch"](1);
                _context.t1 = _context.t0.response.status;
                _context.next = _context.t1 === 422 ? 11 : 13;
                break;

              case 11:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context.abrupt("break", 15);

              case 13:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context.abrupt("break", 15);

              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 6]]);
      }));

      function nuevo() {
        return _nuevo.apply(this, arguments);
      }

      return nuevo;
    }(),
    agregar: function () {
      var _agregar = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var _this2 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                // if (this.CA1.tipo_id == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione un tipo de identificación!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.identificacion == "") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor digite el documento de identificación!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.sexo == "0") {
                //   this.$swal("Error...!", "Por favor seleccione el sexo!", "error");
                //   return;
                // }
                // if (this.CA1.parentesco == "0") {
                //   this.$swal("Error...!", "Por favor seleccione el parentesco!", "error");
                //   return;
                // }
                // if (this.CA1.pnom == "0") {
                //   this.$swal("Error...!", "Por favor digite el primer nombre!", "error");
                //   return;
                // }
                // if (this.CA1.pape == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor digite el primer apellido!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.estado_civil == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione el estado civil!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.fecha_nac == "") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione la fecha de nacimiento!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.escolaridad == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione el nivel de escolaridad!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.ocupacion == "0") {
                //   this.$swal("Error...!", "Por favor seleccione la ocupación!", "error");
                //   return;
                // }
                // if (this.CA1.etnia == "0") {
                //   this.$swal("Error...!", "Por favor seleccione la etnia!", "error");
                //   return;
                // }
                // if (this.CA1.clasificacion == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione la clasificacion de la etnia!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.entiende == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione la opción entiende español!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.pyp == "0") {
                //   this.$swal("Error...!", "Por favor seleccione la opción PYP!", "error");
                //   return;
                // }
                // if (this.CA1.migrante == "0") {
                //   this.$swal(
                //     "Error...!",
                //     "Por favor seleccione la opción migrante!",
                //     "error"
                //   );
                //   return;
                // }
                // if (this.CA1.grado == "0") {
                //   this.$swal("Error...!", "Por favor seleccione el grado!", "error");
                //   return;
                // }
                // VALIDAR SI EL INTEGRANTE SE ENCUENTRA AGREGADO
                this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  identificacion: this.CA1.identificacion
                };
                _context2.prev = 2;
                _context2.next = 5;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validar"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this2.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA                
                    var resultado = _this2.datos.filter(function (identi) {
                      return identi.identificacion.includes(_this2.CA1.identificacion);
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length) {
                      _this2.$swal("Validar...!", "El Documento <b>" + _this2.CA1.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      _this2.datos.push({
                        id: 0,
                        tipo_id: _this2.CA1.tipo_id,
                        identificacion: _this2.CA1.identificacion,
                        sexo: _this2.CA1.sexo,
                        parentesco: _this2.CA1.parentesco,
                        textoParentesco: _this2.showText(_this2.CA1.parentesco, _this2.parentesco_options),
                        pnom: _this2.CA1.pnom,
                        snom: _this2.CA1.snom,
                        pape: _this2.CA1.pape,
                        sape: _this2.CA1.sape,
                        estado_civil: _this2.CA1.estado_civil,
                        fecha_nac: _this2.CA1.fecha_nac,
                        edad: _this2.CA1.edad,
                        afi_entidad: _this2.CA1.afi_entidad,
                        tipo_afiliacion: _this2.CA1.tipo_afiliacion,
                        embarazo: _this2.CA1.embarazo,
                        embarazo_multiple: _this2.CA1.embarazo_multiple,
                        discapacidad: _this2.CA1.discapacidad,
                        escolaridad: _this2.CA1.escolaridad,
                        textoEscolaridad: _this2.showText(_this2.CA1.escolaridad, _this2.escolaridad_options),
                        ocupacion: _this2.CA1.ocupacion,
                        textoOcupacion: _this2.showText(_this2.CA1.ocupacion, _this2.ocupacion_options),
                        colegio: _this2.CA1.colegio,
                        grado: _this2.CA1.grado,
                        entiende: _this2.CA1.entiende,
                        migrante: _this2.CA1.migrante,
                        pyp: _this2.CA1.pyp,
                        etnia: _this2.CA1.etnia,
                        textoEtnia: _this2.showText(_this2.CA1.etnia, _this2.etnia_options),
                        clasificacion: _this2.CA1.clasificacion,
                        textoClasifi: _this2.showText(_this2.CA1.clasificacion, _this2.clasifi_options)
                      });

                      var nacimiento = moment(_this2.CA1.fecha_nac);
                      var hoy = moment();
                      var edad = 0;

                      if (nacimiento < hoy) {
                        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
                      } // AGREGAR NIÑOS MENORES DE 1 AÑO                                


                      if (edad <= 0) {
                        _this2.Amenores1Anio(_this2.CA1);
                      } // AGREGAR NIÑOS MENORES DE 1 AÑO
                      // AGREGAR DE 1 A 5 AÑOS


                      if (edad >= 1 && edad <= 5) {
                        _this2.Ade1a5Anio(_this2.CA1, edad);
                      } // AGREGAR DE 1 A 5 AÑOS
                      // AGREGAR DE 6 A 11 AÑOS


                      if (edad >= 6 && edad <= 11) {
                        _this2.Ade6a11Anio(_this2.CA1, edad);
                      } // AGREGAR DE 6 A 11 AÑOS
                      // AGREGAR DE 10 A 59 AÑOS


                      if (edad >= 10 && edad <= 59) {
                        _this2.Ade10a59Anio(_this2.CA1, edad);
                      } // AGREGAR DE 10 A 59 AÑOS
                      // AGREGAR PARTO POSTPARTO
                      // alert(this.CA1.embarazo_multiple);


                      if (_this2.CA1.embarazo === "SI") {
                        _this2.AParPost(_this2.CA1, edad);
                      } // AGREGAR PARTO POSTPARTO
                      // AGREGAR DE 12 A 17 AÑOS


                      if (edad >= 12 && edad <= 17) {
                        _this2.Ade12a17Anio(_this2.CA1, edad);
                      } // AGREGAR DE 12 A 17 AÑOS    
                      // AGREGAR DE 18 A 28 AÑOS


                      if (edad >= 18 && edad <= 28) {
                        _this2.Ade18a28Anio(_this2.CA1, edad);
                      } // AGREGAR DE 18 A 28 AÑOS
                      // AGREGAR DE 29 A 59 AÑOS


                      if (edad >= 29 && edad <= 59) {
                        _this2.Ade29a59Anio(_this2.CA1, edad);
                      } // AGREGAR DE 29 A 59 AÑOS
                      // AGREGAR DE 60 ó MAS AÑOS


                      if (edad >= 60) {
                        _this2.Ade60Anio(_this2.CA1, edad);
                      } // AGREGAR DE 60 ó MAS AÑOS  
                      // AGREGAR MIGRANTES


                      if (_this2.CA1.migrante === "SI") {
                        _this2.AMigra(_this2.CA1, edad);
                      } // AGREGAR MIGRANTES                  


                      _this2.limpiar();
                    }
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;
                });

              case 5:
                _context2.next = 18;
                break;

              case 7:
                _context2.prev = 7;
                _context2.t0 = _context2["catch"](2);
                _context2.t1 = _context2.t0.response.status;
                _context2.next = _context2.t1 === 419 ? 12 : _context2.t1 === 422 ? 14 : 16;
                break;

              case 12:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context2.abrupt("break", 18);

              case 14:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context2.abrupt("break", 18);

              case 16:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context2.abrupt("break", 18);

              case 18:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 7]]);
      }));

      function agregar() {
        return _agregar.apply(this, arguments);
      }

      return agregar;
    }(),
    agregarJefe: function () {
      var _agregarJefe = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
        var _this3 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(this.checkForm() === true)) {
                  _context3.next = 12;
                  break;
                }

                // VALIDAR SI EL JEFE DE HOGAR SE ENCUENTRA AGREGADO
                this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  identificacion: this.caracData.identificacion
                };
                _context3.prev = 3;
                _context3.next = 6;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this3.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA                
                    var resultado = _this3.datosJefe.filter(function (identi) {
                      return identi.identificacion.includes(_this3.caracData.identificacion);
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length) {
                      _this3.$swal("Validar...!", "El Documento <b>" + _this3.caracData.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      _this3.datosJefe.push({
                        id: 0,
                        id_hogar: 0,
                        telefono: _this3.caracData.telefono,
                        puntaje_sisben: _this3.caracData.puntaje_sisben,
                        afiliacion_entidad: _this3.caracData.afiliacion_entidad,
                        tipo_id: _this3.caracData.tipo_id,
                        identificacion: _this3.caracData.identificacion,
                        sexo: _this3.caracData.sexo,
                        parentesco: _this3.caracData.parentesco,
                        textoParentesco: _this3.showText(_this3.caracData.parentesco, _this3.parentesco_options),
                        pnom: _this3.caracData.pnom,
                        snom: _this3.caracData.snom,
                        pape: _this3.caracData.pape,
                        sape: _this3.caracData.sape,
                        salario: _this3.caracData.salario,
                        estado_civil: _this3.caracData.estado_civil,
                        textoEstado: _this3.showText(_this3.caracData.estado_civil, _this3.estado_options),
                        fecha_nacimiento: _this3.caracData.fecha_nacimiento,
                        tipo_afiliacion: _this3.caracData.tipo_afiliacion,
                        embarazo: _this3.caracData.embarazo,
                        embarazo_multiple: _this3.caracData.embarazo_multiple,
                        discapacidad: _this3.caracData.discapacidad,
                        escolaridad: _this3.caracData.escolaridad,
                        ocupacion: _this3.caracData.ocupacion,
                        textoOcupacion: _this3.showText(_this3.caracData.ocupacion, _this3.ocupacion_options),
                        colegio: _this3.caracData.colegio,
                        grado: _this3.caracData.grado,
                        entiende: _this3.caracData.entiende,
                        migrante: _this3.caracData.migrante,
                        pyp: _this3.caracData.pyp,
                        etnia: _this3.caracData.etnia,
                        textoEtnia: _this3.showText(_this3.caracData.etnia, _this3.etnia_options),
                        clasificacion: _this3.caracData.clasificacion,
                        textoClasificacion: _this3.showText2(_this3.caracData.clasificacion, _this3.clasifi_options, _this3.caracData.etnia, _this3.caracData.etnia),
                        edad: _this3.caracData.edad
                      });

                      _this3.limpiar();
                    }
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;
                });

              case 6:
                _context3.next = 12;
                break;

              case 8:
                _context3.prev = 8;
                _context3.t0 = _context3["catch"](3);
                this.errorDevuelto = _context3.t0.response.data.errors;
                this.entrarPorError = true;

              case 12:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[3, 8]]);
      }));

      function agregarJefe() {
        return _agregarJefe.apply(this, arguments);
      }

      return agregarJefe;
    }(),
    checkForm: function checkForm(e) {
      var bande = true; // if (this.caracData.tipo_id === "") {
      //   this.$refs.tipo_id.focus();          
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione un tipo de identificación!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.identificacion === "") {
      //   this.$refs.identificacion.focus();
      //   bande=false;          
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione un tipo de identificación!",
      //     "error"
      //   );          
      //   return;
      // }  
      // if (this.caracData.sexo === "") {
      //   this.$refs.sexo.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione el sexo!",
      //     "error"
      //   );
      //   return;
      // }        
      // if (this.caracData.parentesco === "") {
      //   this.$refs.parentesco.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione el parentesco!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.pnom === "") {
      //   this.$refs.pnom.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor digite el primer nombre!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.pape === "") {
      //   this.$refs.pape.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor digite el primer apellido!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.estado_civil === "") {
      //   this.$refs.estado_civil.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione el estado civil!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.fecha_nacimiento === "") {
      //   this.$refs.fecha_nacimiento.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la fecha de nacimiento!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.afiliacion_entidad === "") {
      //   this.$refs.afiliacion_entidad.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la eps!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.ocupacion === "") {
      //   this.$refs.ocupacion.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la ocupación!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.etnia === "") {
      //   this.$refs.etnia.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la etnia!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.clasificacion === "") {
      //   this.$refs.clasificacion.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la clasificacion de la etnia!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.salario === "") {
      //   this.$refs.salario.focus();
      //   bande=false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor digite el salario!",
      //     "error"
      //   );
      //   return;
      // }                                                                                

      return bande;
      e.preventDefault();
    },
    showText: function showText(val, vectorAux) {
      for (var i = 0; i < vectorAux.length; i++) {
        if (vectorAux[i].value === val) {
          return vectorAux[i].texto;
        }
      }

      return "";
    },
    showText2: function showText2(val, vectorAux, vectorPrin, val2) {
      // let nuevoVec=vectorPrin.filter(value=>vectorPrin.value.includes(val2));        
      return newVal;
    },
    eliminarItem: function eliminarItem(index, item) {
      this.datos.splice(index, 1);
      var identificacion = item.identificacion;
      this.Men1A = this.Men1A.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De1A5 = this.De1A5.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De6A11 = this.De6A11.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De10A59 = this.De10A59.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.ParPost = this.ParPost.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De12A17 = this.De12A17.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De18A28 = this.De18A28.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De29A59 = this.De29A59.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De60 = this.De60.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.Migra = this.Migra.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    Guardar: function () {
      var _Guardar = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {
        var _this4 = this;

        var isInvalid, parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.$v.$touch();
                isInvalid = this.$v.$invalid;

                if (!isInvalid) {
                  _context4.next = 6;
                  break;
                }

                // display error message
                this.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios", "error");
                _context4.next = 28;
                break;

              case 6:
                console.log("Form is correct"); // submit to server

                this.entrarPorError = false;
                this.errores = [];
                this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                this.caracData.salario = this.caracData.salario.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  caracterizacion: this.caracData,
                  integrantes: this.datos,
                  Men1A: this.Men1A,
                  De1A5: this.De1A5,
                  De6A11: this.De6A11,
                  De10A59: this.De10A59,
                  ParPost: this.ParPost,
                  De12A17: this.De12A17,
                  De18A28: this.De18A28,
                  De29A59: this.De29A59,
                  De60: this.De60,
                  EnCro: this.EnCro,
                  EnInf: this.EnInf,
                  Migra: this.Migra,
                  opcion: "GUARDAR"
                };
                _context4.prev = 12;
                _context4.next = 15;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](parametros).then(function (respuesta) {
                  console.info(respuesta.data);

                  if (respuesta.data.OPC == "SI") {
                    _this4.datos = [];

                    _this4.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                    _this4.$router.push("/gestion");
                  }

                  if (respuesta.data.OPC == "VALIDAR") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this4.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "success");
                  }
                })["catch"](function (error) {
                  _this4.errorDevuelto = error.response.data.errors;
                  _this4.entrarPorError = true;
                });

              case 15:
                _context4.next = 28;
                break;

              case 17:
                _context4.prev = 17;
                _context4.t0 = _context4["catch"](12);
                _context4.t1 = _context4.t0.response.status;
                _context4.next = _context4.t1 === 419 ? 22 : _context4.t1 === 422 ? 24 : 26;
                break;

              case 22:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 28);

              case 24:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 28);

              case 26:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 28);

              case 28:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[12, 17]]);
      }));

      function Guardar() {
        return _Guardar.apply(this, arguments);
      }

      return Guardar;
    }(),
    SoloNumeros: function SoloNumeros(event) {
      if (event.keyCode < 48 || event.keyCode > 57) {
        return false; // this.caracData.salario = 0;
      }
    },
    cambiarCombo: function () {
      var _cambiarCombo = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(caja) {
        var _this5 = this;

        var parametros, _parametros;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (caja === "dpto") {
                  this.hogar.id_mun = "";
                  this.hogar.id_corre = "";
                  this.hogar.id_vereda = "";
                  this.hogar.id_barrio = "";
                }

                if (!(caja === "muni")) {
                  _context5.next = 20;
                  break;
                }

                this.hogar.id_corre = "";
                this.hogar.id_vereda = "";
                this.hogar.id_barrio = "";
                parametros = {
                  _token: this.csrf,
                  id: this.hogar.id_mun,
                  opcion: "MUN"
                };
                _context5.prev = 6;
                _context5.next = 9;
                return _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__["comboBarrios"](parametros).then(function (respuesta) {
                  _this5.barrio_options = respuesta.data.arrayBarrios;
                });

              case 9:
                _context5.next = 20;
                break;

              case 11:
                _context5.prev = 11;
                _context5.t0 = _context5["catch"](6);
                _context5.t1 = _context5.t0.response.status;
                _context5.next = _context5.t1 === 422 ? 16 : 18;
                break;

              case 16:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context5.abrupt("break", 20);

              case 18:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context5.abrupt("break", 20);

              case 20:
                if (!(caja === "corregi")) {
                  _context5.next = 38;
                  break;
                }

                this.hogar.id_vereda = "";
                this.hogar.id_barrio = "";
                _parametros = {
                  _token: this.csrf,
                  id: this.hogar.id_corre,
                  opcion: "CORRE"
                };
                _context5.prev = 24;
                _context5.next = 27;
                return _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__["comboBarrios"](_parametros).then(function (respuesta) {
                  _this5.barrio_options = respuesta.data.arrayBarrios;
                });

              case 27:
                _context5.next = 38;
                break;

              case 29:
                _context5.prev = 29;
                _context5.t2 = _context5["catch"](24);
                _context5.t3 = _context5.t2.response.status;
                _context5.next = _context5.t3 === 422 ? 34 : 36;
                break;

              case 34:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context5.abrupt("break", 38);

              case 36:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context5.abrupt("break", 38);

              case 38:
                if (caja === "etnia") {
                  this.CA1.clasificacion = "0";
                }

              case 39:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this, [[6, 11], [24, 29]]);
      }));

      function cambiarCombo(_x2) {
        return _cambiarCombo.apply(this, arguments);
      }

      return cambiarCombo;
    }(),
    validarNumHog: function validarNumHog() {
      if (this.caracData.numero_hogares <= 0) {
        this.caracData.numero_hogares = "";
      }
    },
    formato: function formato(caja) {
      if (caja == "id1") {
        if (this.caracData.tipo_id == "CC") {
          this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
          var val = (this.caracData.identificacion / 1).toFixed(0).replace(".", ",");
          this.caracData.identificacion = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

          if (this.caracData.identificacion == "NaN") {
            this.caracData.identificacion = "";
          }

          if (this.caracData.identificacion == "0") {
            this.caracData.identificacion = "";
          }
        }
      }

      if (caja == "salario") {
        this.caracData.salario = this.caracData.salario.replace(/[.*+\-?^${}()|[\]\\]/g, "");

        var _val = (this.caracData.salario / 1).toFixed(0).replace(".", ",");

        this.caracData.salario = _val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

        if (this.caracData.salario == "NaN") {
          this.caracData.salario = "";
        }

        if (this.caracData.salario == "0") {
          this.caracData.salario = "";
        }
      }

      if (caja == "tipoid") {
        if (this.caracData.tipo_id != "CC") {
          this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
        } else {
          if (this.caracData.tipo_id == "CC") {
            this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

            var _val2 = (this.caracData.identificacion / 1).toFixed(0).replace(".", ",");

            this.caracData.identificacion = _val2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

            if (this.caracData.identificacion == "NaN") {
              this.caracData.identificacion = "";
            }

            if (this.caracData.identificacion == "0") {
              this.caracData.identificacion = "";
            }
          }
        }
      }

      if (caja == "id2") {
        if (this.CA1.tipo_id == "CC") {
          this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

          var _val3 = (this.CA1.identificacion / 1).toFixed(0).replace(".", ",");

          this.CA1.identificacion = _val3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

          if (this.CA1.identificacion == "NaN") {
            this.CA1.identificacion = "";
          }
        }
      }

      if (caja == "tipoid2") {
        if (this.CA1.tipo_id != "CC") {
          this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
        } else {
          if (this.CA1.tipo_id == "CC") {
            this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

            var _val4 = (this.CA1.identificacion / 1).toFixed(0).replace(".", ",");

            this.CA1.identificacion = _val4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

            if (this.CA1.identificacion == "NaN") {
              this.CA1.identificacion = "";
            }
          }
        }
      }

      if (caja == "telefono1") {
        this.caracData.telefono = this.caracData.telefono.replace(/[^.\d]/g, '').trim();

        if (this.caracData.telefono == "NaN") {
          this.caracData.telefono = "";
        }

        if (this.caracData.telefono == "0") {
          this.caracData.telefono = "";
        }
      }
    },
    volver: function volver() {
      this.$router.push("/gestion");
    },
    limpiar: function limpiar() {
      this.CA1.tipo_id = "0";
      this.CA1.identificacion = "";
      this.CA1.sexo = "0";
      this.CA1.parentesco = "0";
      this.CA1.pnom = "";
      this.CA1.snom = "";
      this.CA1.pape = "";
      this.CA1.sape = "";
      this.CA1.estado_civil = "0";
      this.CA1.fecha_nac = "";
      this.CA1.edad = 0;
      this.CA1.afi_entidad = "0";
      this.CA1.tipo_afiliacion = "0";
      this.CA1.embarazo = "0";
      this.CA1.embarazo_multiple = "0";
      this.CA1.discapacidad = "0";
      this.CA1.escolaridad = "0";
      this.CA1.ocupacion = "0";
      this.CA1.colegio = "";
      this.CA1.grado = "0";
      this.CA1.entiende = "0";
      this.CA1.migrante = "0";
      this.CA1.pyp = "0";
      this.CA1.etnia = "0";
      this.CA1.clasificacion = "0";
    },
    mostrarOtro: function mostrarOtro(tipo) {
      if (tipo === "TE") {
        if (this.viviendaData.tipo_estructura === "5") {
          this.mOTE = true;
        } else {
          this.mOTE = false;
        }

        this.viviendaData.otro_tipo_estructura = "";
      }

      if (tipo === "TC") {
        if (this.viviendaData.tipo_cubierta === "5") {
          this.mOTC = true;
        } else {
          this.mOTC = false;
        }

        this.viviendaData.otro_tipo_cubierta = "";
      }

      if (tipo === "AE") {
        if (this.viviendaData.actividad_economica === "CUAL") {
          this.mOAE = true;
        } else {
          this.mOAE = false;
        }

        this.viviendaData.cual_actividad_economica = "";
      }

      if (tipo === "FA") {
        if (this.viviendaData.fuente_agua === "9") {
          this.mOFA = true;
        } else {
          this.mOFA = false;
        }

        this.viviendaData.cual_fuente = "";
      }

      if (tipo === "DA") {
        if (this.viviendaData.donde_almacena_agua === "5") {
          this.mODA = true;
        } else {
          this.mODA = false;
        }

        this.viviendaData.otro_almacena_agua = "";
      }

      if (tipo === "FB") {
        if (this.viviendaData.destino_final_basura === "5") {
          this.mOFB = true;
        } else {
          this.mOFB = false;
        }

        this.viviendaData.otro_destino_final_basura = "";
      }

      if (tipo === "OC") {
        if (this.viviendaData.otro_cerca === "SI") {
          this.mOOC = true;
        } else {
          this.mOOC = false;
        }

        this.viviendaData.cual_cerca = "";
      }

      if (tipo === "EV") {
        if (this.viviendaData.envases_vacios === "7") {
          this.mOEV = true;
        } else {
          this.mOEV = false;
        }

        this.viviendaData.otro_envases_vacios = "";
      }

      if (tipo === "EP") {
        if (this.viviendaData.elementos_protecion === "5") {
          this.mOEP = true;
        } else {
          this.mOEP = false;
        }

        this.viviendaData.otro_elementos_protecion = "";
      }

      if (tipo === "MC") {
        if (this.viviendaData.metodos_coccion === "6") {
          this.mOMC = true;
        } else {
          this.mOMC = false;
        }

        this.viviendaData.otro_metodos_coccion = "";
      }

      if (tipo === "AA") {
        if (this.viviendaData.lugares_almacenan_alimentos === "6") {
          this.mOAA = true;
        } else {
          this.mOAA = false;
        }

        this.viviendaData.otro_lugares_almacenan_alimentos = "";
      }
    },
    eliminarItemAnimales: function eliminarItemAnimales(index) {
      this.animalesData.splice(index, 1);
    },
    agregarAnimales: function agregarAnimales() {
      if (this.animal === "") {
        this.$swal("Error...!", "Por favor Digite Un Animal!", "error");
        return;
      }

      if (this.vacunadoAnimal === "0") {
        this.$swal("Error...!", "Por favor Seleccione Si El Animal Se Encuentra Vacunado!", "error");
        return;
      }

      if (this.cuantosAnimal === "") {
        this.$swal("Error...!", "Por favor Digite cuantos Animales Tiene!", "error");
        return;
      }

      if (!this.isNumeric(this.cuantosAnimal)) {
        this.$swal("Error...!", "Por favor Digite cuantos Animales Tiene!", "error");
        return;
      }

      this.animalesData.push({
        id: 0,
        animal: this.animal,
        cuantos: this.cuantosAnimal,
        vacunados: this.vacunadoAnimal
      });
      this.animal = "";
      this.cuantosAnimal = "";
      this.vacunadoAnimal = "0";
    },
    Amenores1Anio: function Amenores1Anio(vector) {
      this.Men1A.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        lugar_nacimiento: "",
        hemoclasificacion: "",
        compli_parto: "",
        via_parto: "",
        cyc: "",
        valoracion_23: "",
        valoracion_68: "",
        valoracion_911: "",
        lactancia: "",
        peso_nacer: "",
        peso_actual: "",
        longitud_nacer: "",
        longitud_actual: "",
        peso_long: "",
        cinta: "",
        edemas: "",
        lenguaje: "",
        motora: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        carnet: "",
        bcg: "",
        hepb: "",
        polio: "",
        pentavalente: "",
        maltrato: "",
        morbilidad: "",
        tsh: ""
      });
    },
    changeupdateMenA1: function changeupdateMenA1(item, event, opcion) {
      if (opcion === "peso_nacer") {
        item.peso_nacer = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "peso_actual") {
        item.peso_actual = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "longitud_nacer") {
        item.longitud_nacer = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "longitud_actual") {
        item.longitud_actual = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "peso_long") {
        item.peso_long = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateMenA1: function updateMenA1(item, valor, opcion) {
      if (opcion === "hemoclasificacion") {
        item.hemoclasificacion = valor;
      }

      if (opcion === "lugar_nacimiento") {
        item.lugar_nacimiento = valor;
      }

      if (opcion === "compli_parto") {
        item.compli_parto = valor;
      }

      if (opcion === "via_parto") {
        item.via_parto = valor;
      }

      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "valoracion_23") {
        item.valoracion_23 = valor;
      }

      if (opcion === "valoracion_68") {
        item.valoracion_68 = valor;
      }

      if (opcion === "valoracion_911") {
        item.valoracion_911 = valor;
      }

      if (opcion === "lactancia") {
        item.lactancia = valor;
      }

      if (opcion === "cinta") {
        item.cinta = valor;
      }

      if (opcion === "edemas") {
        item.edemas = valor;
      }

      if (opcion === "lenguaje") {
        item.lenguaje = valor;
      }

      if (opcion === "motora") {
        item.motora = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "bcg") {
        item.bcg = valor;
      }

      if (opcion === "hepb") {
        item.hepb = valor;
      }

      if (opcion === "polio") {
        item.polio = valor;
      }

      if (opcion === "pentavalente") {
        item.pentavalente = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "morbilidad") {
        item.morbilidad = valor;
      }

      if (opcion === "tsh") {
        item.tsh = valor;
      }
    },
    Ade1a5Anio: function Ade1a5Anio(vector, edad) {
      this.De1A5.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        beneficiario: "",
        cyc: "",
        valoracion_1823: "",
        valoracion_3035: "",
        valoracion_4: "",
        peso: "",
        talla: "",
        imc: "",
        pb: "",
        pt: "",
        te: "",
        lenguaje: "",
        motora: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        caries: "",
        nocepillado: "",
        consultaodon: "",
        carnet: "",
        bcg: "",
        polio: "",
        dpt: "",
        fiebrea: "",
        tripleviral: "",
        otras: "",
        desparacitado: "",
        maltrato: "",
        enfermedad: "",
        medicamento: ""
      });
    },
    changeupdateDe1A5: function changeupdateDe1A5(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pt") {
        item.pt = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "te") {
        item.te = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "otras") {
        item.otras = event.target.value.trim();
        ;
      }
    },
    updateDe1A5: function updateDe1A5(item, valor, opcion) {
      if (opcion === "beneficiario") {
        item.beneficiario = valor;
      }

      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "valoracion_1823") {
        item.valoracion_1823 = valor;
      }

      if (opcion === "valoracion_3035") {
        item.valoracion_3035 = valor;
      }

      if (opcion === "valoracion_4") {
        item.valoracion_4 = valor;
      }

      if (opcion === "lenguaje") {
        item.lenguaje = valor;
      }

      if (opcion === "motora") {
        item.motora = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "caries") {
        item.caries = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "bcg") {
        item.bcg = valor;
      }

      if (opcion === "polio") {
        item.polio = valor;
      }

      if (opcion === "dpt") {
        item.dpt = valor;
      }

      if (opcion === "fiebrea") {
        item.fiebrea = valor;
      }

      if (opcion === "tripleviral") {
        item.tripleviral = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "medicamento") {
        item.medicamento = valor;
      }
    },
    Ade6a11Anio: function Ade6a11Anio(vector, edad) {
      this.De6A11.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        cyc: "",
        atencion: "",
        peso: "",
        talla: "",
        imc: "",
        pb: "",
        pt: "",
        te: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        dientes_sanos: "",
        consultaodon: "",
        nofluor: "",
        nocepillado: "",
        maltrato: "",
        sustanciaspsico: "",
        desparacitado: "",
        enfermedad: "",
        medicamento: "",
        padre: "",
        madre: "",
        hermanos: "",
        conyuge: ""
      });
    },
    changeupdateDe6A11: function changeupdateDe6A11(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pt") {
        item.pt = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "te") {
        item.te = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "nofluor") {
        item.nofluor = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateDe6A11: function updateDe6A11(item, valor, opcion) {
      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "atencion") {
        item.atencion = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "sustanciaspsico") {
        item.sustanciaspsico = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "medicamento") {
        item.medicamento = valor;
      }

      if (opcion === "padre") {
        item.padre = valor;
      }

      if (opcion === "madre") {
        item.madre = valor;
      }

      if (opcion === "hermanos") {
        item.hermanos = valor;
      }

      if (opcion === "conyuge") {
        item.conyuge = valor;
      }
    },
    Ade10a59Anio: function Ade10a59Anio(vector, edad) {
      this.De10A59.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        primera_mes: "",
        flujo_vaginal: "",
        flujo_uretral: "",
        relaciones_sexuales: "",
        compa_sexuales: "",
        usa_condon: "",
        abortos_seis: "",
        embarazo_adolecentes: "",
        metodo: "",
        tiempo_metodo: "",
        controles: "",
        motivo: "",
        citologia: "",
        colposcopia: "",
        examen_seno: "",
        violencia: "",
        tdit: "",
        tripleviral: "",
        nacidos_vivos: "",
        abortos: "",
        examen_prostata: "",
        biposia_prostata: ""
      });
    },
    changeupdateDe10A59: function changeupdateDe10A59(item, event, opcion) {
      if (opcion === "primera_mes") {
        item.primera_mes = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "compa_sexuales") {
        item.compa_sexuales = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "tiempo_metodo") {
        item.tiempo_metodo = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "nacidos_vivos") {
        item.nacidos_vivos = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateDe10A59: function updateDe10A59(item, valor, opcion) {
      if (opcion === "flujo_vaginal") {
        item.flujo_vaginal = valor;
      }

      if (opcion === "flujo_uretral") {
        item.flujo_uretral = valor;
      }

      if (opcion === "relaciones_sexuales") {
        item.relaciones_sexuales = valor;
      }

      if (opcion === "usa_condon") {
        item.usa_condon = valor;
      }

      if (opcion === "abortos_seis") {
        item.abortos_seis = valor;
      }

      if (opcion === "embarazo_adolecentes") {
        item.embarazo_adolecentes = valor;
      }

      if (opcion === "metodo") {
        item.metodo = valor;
      }

      if (opcion === "motivo") {
        item.motivo = valor;
      }

      if (opcion === "controles") {
        item.controles = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "colposcopia") {
        item.colposcopia = valor;
      }

      if (opcion === "examen_seno") {
        item.examen_seno = valor;
      }

      if (opcion === "violencia") {
        item.violencia = valor;
      }

      if (opcion === "tdit") {
        item.tdit = valor;
      }

      if (opcion === "tripleviral") {
        item.tripleviral = valor;
      }

      if (opcion === "abortos") {
        item.abortos = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "biposia_prostata") {
        item.biposia_prostata = valor;
      }
    },
    AParPost: function AParPost(vector, edad) {
      this.ParPost.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        aceptacion: "",
        control_prenatal: "",
        atencion_parto: "",
        carnet: "",
        fecha_ultima: "",
        fecha_probable: "",
        peso: "",
        talla: "",
        imc: "",
        semanas_ges: "",
        num_controles: "",
        vih: "",
        toxoplasma: "",
        vdrl: "",
        odontologia: "",
        vacunaciontdit: "",
        fecha_ultimo_parto: "",
        suplementacion: "",
        enfermedades_cronicas: "",
        sedentarismo: "",
        fuma: "",
        consumo: "",
        bebidas: "",
        tipo_parto: "",
        atencion_institucional: "",
        cc18: "",
        morgestacion: "",
        morparto: "",
        morposparto: ""
      });
    },
    changeupdatePosparto: function changeupdatePosparto(item, event, opcion) {
      if (opcion === "fecha_ultima") {
        item.fecha_ultima = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "fecha_probable") {
        item.fecha_probable = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "semanas_ges") {
        item.semanas_ges = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "fecha_ultimo_parto") {
        item.fecha_ultimo_parto = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updatePosparto: function updatePosparto(item, valor, opcion) {
      if (opcion === "aceptacion") {
        item.aceptacion = valor;
      }

      if (opcion === "control_prenatal") {
        item.control_prenatal = valor;
      }

      if (opcion === "atencion_parto") {
        item.atencion_parto = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "num_controles") {
        item.num_controles = valor;
      }

      if (opcion === "vih") {
        item.vih = valor;
      }

      if (opcion === "toxoplasma") {
        item.toxoplasma = valor;
      }

      if (opcion === "vdrl") {
        item.vdrl = valor;
      }

      if (opcion === "odontologia") {
        item.odontologia = valor;
      }

      if (opcion === "vacunaciontdit") {
        item.vacunaciontdit = valor;
      }

      if (opcion === "suplementacion") {
        item.suplementacion = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "sedentarismo") {
        item.sedentarismo = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "consumo") {
        item.consumo = valor;
      }

      if (opcion === "bebidas") {
        item.bebidas = valor;
      }

      if (opcion === "tipo_parto") {
        item.tipo_parto = valor;
      }

      if (opcion === "atencion_institucional") {
        item.atencion_institucional = valor;
      }

      if (opcion === "cc18") {
        item.cc18 = valor;
      }

      if (opcion === "morgestacion") {
        item.morgestacion = valor;
      }

      if (opcion === "morparto") {
        item.morparto = valor;
      }

      if (opcion === "morposparto") {
        item.morposparto = valor;
      }
    },
    Ade12a17Anio: function Ade12a17Anio(vector, edad) {
      this.De12A17.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: "",
        talla: "",
        imc: "",
        pb: "",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        queescancerseno: "",
        padre: "",
        madre: "",
        hermanos: "",
        conyuge: ""
      });
    },
    changeupdateDe12A17: function changeupdateDe12A17(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "religion") {
        item.religion = event.target.value.trim();
        ;
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateDe12A17: function updateDe12A17(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }

      if (opcion === "queescancerseno") {
        item.queescancerseno = valor;
      }

      if (opcion === "padre") {
        item.padre = valor;
      }

      if (opcion === "madre") {
        item.madre = valor;
      }

      if (opcion === "hermanos") {
        item.hermanos = valor;
      }

      if (opcion === "conyuge") {
        item.conyuge = valor;
      }
    },
    Ade18a28Anio: function Ade18a28Anio(vector, edad) {
      this.De18A28.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: "",
        talla: "",
        imc: "",
        pcintura: "",
        pb: "",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: ""
      });
    },
    changeupdateDe18A28: function changeupdateDe18A28(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "religion") {
        item.religion = event.target.value.trim();
        ;
      }

      if (opcion === "pcintura") {
        item.pcintura = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateDe18A28: function updateDe18A28(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }
    },
    Ade29a59Anio: function Ade29a59Anio(vector, edad) {
      this.De29A59.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: "",
        talla: "",
        imc: "",
        pcintura: "",
        pb: "",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        examen_prostata: "",
        citologia: "",
        examen_mama: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: ""
      });
    },
    changeupdateDe29A59: function changeupdateDe29A59(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "religion") {
        item.religion = event.target.value.trim();
        ;
      }

      if (opcion === "pcintura") {
        item.pcintura = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateDe29A59: function updateDe29A59(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "examen_mama") {
        item.examen_mama = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }
    },
    Ade60Anio: function Ade60Anio(vector, edad) {
      this.De60.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        grupo_ayudas: "",
        peso: "",
        talla: "",
        imc: "",
        pa: "",
        glicemia: "",
        cigarrillo: "",
        alcohol: "",
        actividad_fisica: "",
        sintomatico: "",
        examen_seno: "",
        citologia: "",
        colposcopia: "",
        examen_prostata: "",
        biposia_prostata: "",
        agudeza_visual: "",
        subsidio: "",
        enfermedades_cronicas: "",
        enfermedades_infecciosas: ""
      });
    },
    changeupdateDe60: function changeupdateDe60(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "pa") {
        item.pa = event.target.value.trim();
        ;
      }

      if (opcion === "glicemia") {
        item.glicemia = event.target.value.trim();
        ;
      }
    },
    updateDe60: function updateDe60(item, valor, opcion) {
      if (opcion === "grupo_ayudas") {
        item.grupo_ayudas = valor;
      }

      if (opcion === "cigarrillo") {
        item.cigarrillo = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "actividad_fisica") {
        item.actividad_fisica = valor;
      }

      if (opcion === "sintomatico") {
        item.sintomatico = valor;
      }

      if (opcion === "examen_seno") {
        item.examen_seno = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "colposcopia") {
        item.colposcopia = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "biposia_prostata") {
        item.biposia_prostata = valor;
      }

      if (opcion === "agudeza_visual") {
        item.agudeza_visual = valor;
      }

      if (opcion === "subsidio") {
        item.subsidio = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;

        if (valor === "SI") {
          // AGREGAR ENFERMEDADES CONTAGIOSAS
          this.AEnCro(item); // AGREGAR ENFERMEDADES CONTAGIOSAS
        } else {
          // ELIMINAR ENFERMEDADES CONTAGIOSAS
          this.EEnCro(item); // ELIMINAR ENFERMEDADES CONTAGIOSAS
        }
      }

      if (opcion === "enfermedades_infecciosas") {
        item.enfermedades_infecciosas = valor;

        if (valor === "SI") {
          // AGREGAR ENFERMEDADES INFECCIOSAS
          this.AEnInf(item); // AGREGAR ENFERMEDADES INFECCIOSAS
        } else {
          // ELIMINAR ENFERMEDADES INFECCIOSAS
          this.EEnInf(item); // ELIMINAR ENFERMEDADES INFECCIOSAS
        }
      }
    },
    AEnCro: function AEnCro(vector) {
      this.EnCro.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        enfermedad: "",
        tiempo: "",
        tratamiento: "",
        complicaciones: ""
      });
    },
    changeupdateEnCro: function changeupdateEnCro(item, event, opcion) {
      if (opcion === "tiempo") {
        item.tiempo = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "complicaciones") {
        item.complicaciones = event.target.value.trim();
        ;
      }
    },
    updateEnCro: function updateEnCro(item, valor, opcion) {
      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "tratamiento") {
        item.tratamiento = valor;
      }
    },
    EEnCro: function EEnCro(item) {
      var identificacion = item.identificacion;
      this.EnCro = this.EnCro.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    AEnInf: function AEnInf(vector) {
      this.EnInf.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        enfermedad: "",
        tiempo: "",
        tratamiento: "",
        complicaciones: ""
      });
    },
    changeupdateEnInf: function changeupdateEnInf(item, event, opcion) {
      if (opcion === "tiempo") {
        item.tiempo = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }

      if (opcion === "complicaciones") {
        item.complicaciones = event.target.value.trim();
        ;
      }
    },
    updateEnInf: function updateEnInf(item, valor, opcion) {
      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "tratamiento") {
        item.tratamiento = valor;
      }
    },
    EEnInf: function EEnInf(item) {
      var identificacion = item.identificacion;
      this.EnInf = this.EnInf.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    AMigra: function AMigra(vector, edad) {
      this.Migra.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        pais: "",
        registrado: "",
        cuantollego: "",
        futuro: "",
        recibido: "",
        necesidad: "",
        dependen: "",
        ingreso: ""
      });
    },
    changeupdateMigra: function changeupdateMigra(item, event, opcion) {
      if (opcion === "pais") {
        item.pais = event.target.value.trim();
        ;
      }

      if (opcion === "dependen") {
        item.dependen = event.target.value.replace(/[^.\d]/g, '').trim();
        ;
      }
    },
    updateMigra: function updateMigra(item, valor, opcion) {
      if (opcion === "registrado") {
        item.registrado = valor;
      }

      if (opcion === "cuantollego") {
        item.cuantollego = valor;
      }

      if (opcion === "futuro") {
        item.futuro = valor;
      }

      if (opcion === "recibido") {
        item.recibido = valor;
      }

      if (opcion === "necesidad") {
        item.necesidad = valor;
      }

      if (opcion === "ingreso") {
        item.ingreso = valor;
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&":
/*!*************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--6-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.color-datepicker {\n  background: #f2f2f2;\n  border: 1px solid #ddd;\n  padding: 0em 1em 1em;\n  margin-bottom: 2em;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader!./node_modules/css-loader??ref--6-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../../node_modules/css-loader??ref--6-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--6-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=style&index=0&lang=css& */ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1& ***!
  \**********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "row" }, [
    _c("div", { staticClass: "col-12" }, [
      _c(
        "div",
        {
          staticClass: "kt-portlet kt-portlet--height-fluid kt-portlet--mobile"
        },
        [
          _c(
            "div",
            {
              staticClass:
                "kt-portlet__head kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm"
            },
            [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "kt-portlet__head-toolbar" }, [
                _c(
                  "a",
                  {
                    staticClass: "btn btn-danger kt-margin-r-10",
                    attrs: { href: "#" },
                    on: {
                      click: function($event) {
                        $event.preventDefault()
                        return _vm.volver($event)
                      }
                    }
                  },
                  [
                    _c("i", { staticClass: "la la-arrow-left" }),
                    _vm._v(" "),
                    _c("span", { staticClass: "kt-hidden-mobile" }, [
                      _vm._v("Volver")
                    ])
                  ]
                ),
                _vm._v(" "),
                _c("div", { staticClass: "btn-group" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-brand",
                      attrs: { type: "button" },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          return _vm.Guardar($event)
                        }
                      }
                    },
                    [
                      _c("i", { staticClass: "la la-check" }),
                      _vm._v(" "),
                      _c("span", { staticClass: "kt-hidden-mobile" }, [
                        _vm._v("Guardar")
                      ])
                    ]
                  )
                ])
              ])
            ]
          ),
          _vm._v(" "),
          _c("div", { staticClass: "kt-portlet__body" }, [
            _vm._m(1),
            _vm._v(" "),
            _c("div", { staticClass: "tab-content" }, [
              _c(
                "div",
                {
                  staticClass: "tab-pane active",
                  attrs: { id: "tabIdentificacion", role: "tabpanel" }
                },
                [
                  _vm._m(2),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Departamento (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.hogar.id_dpto.$error,
                              "is-valid": !_vm.$v.hogar.id_dpto.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("dpto")
                              }
                            },
                            model: {
                              value: _vm.$v.hogar.id_dpto.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.hogar.id_dpto,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.hogar.id_dpto.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.dpto_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Departamento Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.hogar.id_dpto.required
                            ? _c("span", [
                                _vm._v("El departamento es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Municipio (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.hogar.id_mun.$error,
                              "is-valid": !_vm.$v.hogar.id_mun.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("muni")
                              }
                            },
                            model: {
                              value: _vm.$v.hogar.id_mun.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.hogar.id_mun,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.hogar.id_mun.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(
                              _vm.muni_options[_vm.hogar.id_dpto],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Municipio Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.hogar.id_mun.required
                            ? _c("span", [
                                _vm._v("El municipio es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Corregimiento:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: { "is-valid": _vm.hogar.id_corre },
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("corregi")
                              }
                            },
                            model: {
                              value: _vm.hogar.id_corre,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_corre", $$v)
                              },
                              expression: "hogar.id_corre"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(
                              _vm.corregi_options[_vm.hogar.id_mun],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Vereda:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: { "is-valid": _vm.hogar.id_vereda },
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("vereda")
                              }
                            },
                            model: {
                              value: _vm.hogar.id_vereda,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_vereda", $$v)
                              },
                              expression: "hogar.id_vereda"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(
                              _vm.vereda_options[_vm.hogar.id_corre],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Barrio:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: { "is-valid": _vm.hogar.id_barrio },
                            model: {
                              value: _vm.hogar.id_barrio,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_barrio", $$v)
                              },
                              expression: "hogar.id_barrio"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.barrio_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Zona:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: { "is-valid": _vm.hogar.id_zona },
                            model: {
                              value: _vm.hogar.id_zona,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_zona", $$v)
                              },
                              expression: "hogar.id_zona"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Urbano")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Rural centro poblado")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Rural disperso")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tenencia de Vivienda (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.hogar.tenencia_vivienda.$error,
                              "is-valid": !_vm.$v.hogar.tenencia_vivienda
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.hogar.tenencia_vivienda.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.hogar.tenencia_vivienda,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.hogar.tenencia_vivienda.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PROPIETARIO" } }, [
                              _vm._v("PROPIETARIO(A)")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ARRENDADO" } }, [
                              _vm._v("ARRENDADO(A)")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FAMILIAR" } }, [
                              _vm._v("FAMILIAR")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CUIDADOR" } }, [
                              _vm._v("CUIDADOR(A)")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tenencia de Vivienda Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.hogar.tenencia_vivienda.required
                            ? _c("span", [
                                _vm._v("La tenencia de vivienda es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Numero de Hogares (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.$v.hogar.numero_hogares.$model,
                            expression: "$v.hogar.numero_hogares.$model"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: {
                          "is-invalid": _vm.$v.hogar.numero_hogares.$error,
                          "is-valid": !_vm.$v.hogar.numero_hogares.$invalid
                        },
                        attrs: {
                          type: "text",
                          placeholder: "Numero de Hogares"
                        },
                        domProps: { value: _vm.$v.hogar.numero_hogares.$model },
                        on: {
                          change: _vm.validarNumHog,
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.$v.hogar.numero_hogares,
                              "$model",
                              $event.target.value
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("div", { staticClass: "valid-feedback" }, [
                        _vm._v("Numero de Hogares Valido")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        !_vm.$v.hogar.numero_hogares.required
                          ? _c("span", [
                              _vm._v("El numero de hogares es obligatorio")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.$v.hogar.numero_hogares.numeric
                          ? _c("span", [
                              _vm._v("El numero de hogares debe ser numerico")
                            ])
                          : _vm._e()
                      ])
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Población Especial (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.hogar.poblacion_especial.$error,
                              "is-valid": !_vm.$v.hogar.poblacion_especial
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.hogar.poblacion_especial.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.hogar.poblacion_especial,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.hogar.poblacion_especial.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("NO APLICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("DESPLAZADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("VICTIMA DEL CONFLICTO ARMADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("MADRE COMUNITARIA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Población Especial Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.hogar.poblacion_especial.required
                            ? _c("span", [
                                _vm._v("La población especial es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("¿La comunidad presenta vías de acceso? (*):")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.hogar.vias_acceso.$error,
                              "is-valid": !_vm.$v.hogar.vias_acceso.$invalid
                            },
                            model: {
                              value: _vm.$v.hogar.vias_acceso.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.hogar.vias_acceso,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.hogar.vias_acceso.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Pavimentadas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Placa huella")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Sin pavimentar")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Presenta vias de acceso Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.hogar.vias_acceso.required
                            ? _c("span", [
                                _vm._v(
                                  "La comunidad presenta vías de acceso es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-5" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Presenta acceso fácil a los servicios públicos? (*):"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.hogar.servicios_publicos.$error,
                              "is-valid": !_vm.$v.hogar.servicios_publicos
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.hogar.servicios_publicos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.hogar.servicios_publicos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.hogar.servicios_publicos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Permanente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("OCASIONAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Periódico")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Presenta acceso fácil a los servicios públicos Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.hogar.servicios_publicos.required
                            ? _c("span", [
                                _vm._v(
                                  "Presenta acceso fácil a los servicios públicos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-12" }, [
                      _c("label", [_vm._v("Dirección (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.$v.hogar.direccion.$model,
                            expression: "$v.hogar.direccion.$model",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: {
                          "is-invalid": _vm.$v.hogar.direccion.$error,
                          "is-valid": !_vm.$v.hogar.direccion.$invalid
                        },
                        attrs: { type: "text", placeholder: "Dirección" },
                        domProps: { value: _vm.$v.hogar.direccion.$model },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.$v.hogar.direccion,
                              "$model",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("div", { staticClass: "valid-feedback" }, [
                        _vm._v("La Dirección es Valida")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        !_vm.$v.hogar.direccion.required
                          ? _c("span", [_vm._v("La dirección es obligatoria")])
                          : _vm._e()
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(3),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo de Documento (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "tipo_id",
                            class:
                              _vm.caracData.tipo_id == "" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.formato("tipoid")
                              }
                            },
                            model: {
                              value: _vm.caracData.tipo_id,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "tipo_id",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.tipo_id"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CC" } }, [
                              _vm._v("CEDULA DE CIUDADANIA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PA" } }, [
                              _vm._v("PASAPORTE")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "RC" } }, [
                              _vm._v("REGISTRO CIVIL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TI" } }, [
                              _vm._v("TARJETA DE IDENTIDAD")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ASI" } }, [
                              _vm._v("ADULTO SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MSI" } }, [
                              _vm._v("MENOR SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CE" } }, [
                              _vm._v("CEDULA DE EXTRANJERIA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Documento (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.identificacion,
                            expression: "caracData.identificacion",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "identificacion",
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.caracData.identificacion == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Documento" },
                        domProps: { value: _vm.caracData.identificacion },
                        on: {
                          change: function($event) {
                            return _vm.formato("id1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "identificacion",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Sexo (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "sexo",
                            class: _vm.caracData.sexo == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.sexo,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "sexo",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.sexo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MASCULINO" } }, [
                              _vm._v("MASCULINO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FEMENINO" } }, [
                              _vm._v("FEMENINO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Parentesco (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "parentesco",
                            class:
                              _vm.caracData.parentesco == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.parentesco,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "parentesco",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.parentesco"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.parentesco_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Nombre (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.pnom,
                            expression: "caracData.pnom",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "pnom",
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.pnom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Nombre" },
                        domProps: { value: _vm.caracData.pnom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "pnom",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Nombre:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.snom,
                            expression: "caracData.snom",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.snom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Segundo Nombre" },
                        domProps: { value: _vm.caracData.snom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "snom",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Apellido (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.pape,
                            expression: "caracData.pape",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "pape",
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.pape == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Apellido" },
                        domProps: { value: _vm.caracData.pape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "pape",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Apellido:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.sape,
                            expression: "caracData.sape",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.sape == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Segundo Apellido"
                        },
                        domProps: { value: _vm.caracData.sape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "sape",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Telefono:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.telefono,
                            expression: "caracData.telefono",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.telefono == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Telefono" },
                        domProps: { value: _vm.caracData.telefono },
                        on: {
                          change: function($event) {
                            return _vm.formato("telefono1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "telefono",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Estado Civil (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "estado_civil",
                            class:
                              _vm.caracData.estado_civil == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.estado_civil,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "estado_civil", $$v)
                              },
                              expression: "caracData.estado_civil"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.estado_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Fecha de Nacimiento (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.caracData.fecha_nacimiento,
                            expression: "caracData.fecha_nacimiento"
                          }
                        ],
                        ref: "fecha_nacimiento",
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.caracData.fecha_nacimiento == ""
                            ? ""
                            : "is-valid",
                        attrs: {
                          id: "date",
                          type: "date",
                          placeholder: "Fecha de Nacimiento",
                          max: _vm._f("moment")(_vm.hoy)
                        },
                        domProps: { value: _vm.caracData.fecha_nacimiento },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "fecha_nacimiento",
                              $event.target.value
                            )
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Edad:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.calEdad2,
                            expression: "calEdad2"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.edad == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Edad",
                          readonly: ""
                        },
                        domProps: { value: _vm.calEdad2 },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.calEdad2 = $event.target.value
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Puntaje Sisben:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.puntaje_sisben,
                            expression: "caracData.puntaje_sisben",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.caracData.puntaje_sisben == "" ? "" : "is-valid",
                        attrs: { type: "text" },
                        domProps: { value: _vm.caracData.puntaje_sisben },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "puntaje_sisben",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-7" },
                      [
                        _c("label", [_vm._v("Eps (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "afiliacion_entidad",
                            class:
                              _vm.caracData.afiliacion_entidad == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.afiliacion_entidad,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "afiliacion_entidad",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.afiliacion_entidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NINGUNA" } }, [
                              _vm._v("NINGUNA")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.admini_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo Afiliación:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.tipo_afiliacion == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.tipo_afiliacion,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "tipo_afiliacion", $$v)
                              },
                              expression: "caracData.tipo_afiliacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SUBSIDIADO" } }, [
                              _vm._v("SUBSIDIADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CONTRIBUTIVO" } }, [
                              _vm._v("CONTRIBUTIVO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ESPECIAL" } }, [
                              _vm._v("ESPECIAL")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.embarazo == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.embarazo,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "embarazo", $$v)
                              },
                              expression: "caracData.embarazo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo Multiple:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.embarazo_multiple == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.embarazo_multiple,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "embarazo_multiple",
                                  $$v
                                )
                              },
                              expression: "caracData.embarazo_multiple"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Discapacidad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.discapacidad == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.discapacidad,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "discapacidad", $$v)
                              },
                              expression: "caracData.discapacidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Nivel de Escolaridad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.nivel_escolaridad == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.nivel_escolaridad,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "nivel_escolaridad",
                                  $$v
                                )
                              },
                              expression: "caracData.nivel_escolaridad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.escolaridad_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Ocupación (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "ocupacion",
                            class:
                              _vm.caracData.ocupacion == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.ocupacion,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "ocupacion", $$v)
                              },
                              expression: "caracData.ocupacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.ocupacion_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-6" }, [
                      _c("label", [_vm._v("Colegio:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.caracData.colegio,
                            expression: "caracData.colegio"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.colegio == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Colegio" },
                        domProps: { value: _vm.caracData.colegio },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "colegio",
                              $event.target.value
                            )
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Grado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.caracData.grado == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.grado,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "grado", $$v)
                              },
                              expression: "caracData.grado"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Sexto" } }, [
                              _vm._v("Sexto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Septimo" } }, [
                              _vm._v("Septimo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Octavo" } }, [
                              _vm._v("Octavo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Noveno" } }, [
                              _vm._v("Noveno")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Decimo" } }, [
                              _vm._v("Decimo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Undecimo" } }, [
                              _vm._v("Undecimo")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Etnia (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "etnia",
                            class: _vm.caracData.etnia == "" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("etnia")
                              }
                            },
                            model: {
                              value: _vm.caracData.etnia,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "etnia", $$v)
                              },
                              expression: "caracData.etnia"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.etnia_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Clasificación de la Etnia (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "clasificacion",
                            class:
                              _vm.caracData.clasificacion == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.clasificacion,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "clasificacion", $$v)
                              },
                              expression: "caracData.clasificacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(
                              _vm.clasifi_options[_vm.caracData.etnia],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Entiende Español:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.entiende == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.entiende,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "entiende", $$v)
                              },
                              expression: "caracData.entiende"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("PYP:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.caracData.pyp == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.pyp,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "pyp", $$v)
                              },
                              expression: "caracData.pyp"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Crecimiento" } }, [
                              _vm._v("Crecimiento y Desarrollo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Joven" } }, [
                              _vm._v("Joven")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Adulto" } }, [
                              _vm._v("Adulto Mayor")
                            ]),
                            _vm._v(" "),
                            _c(
                              "option",
                              { attrs: { value: "Planificacion" } },
                              [_vm._v("Planificación Familiar")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Control" } }, [
                              _vm._v("Control Prenatal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-2" },
                      [
                        _c("label", [_vm._v("Migrante:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.migrante == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.migrante,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "migrante", $$v)
                              },
                              expression: "caracData.migrante"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Salario (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.salario,
                            expression: "caracData.salario",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "salario",
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.salario == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Salario" },
                        domProps: { value: _vm.caracData.salario },
                        on: {
                          change: function($event) {
                            return _vm.formato("salario")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "salario",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-1" }, [
                      _c("br"),
                      _vm._v(" "),
                      _c("label", [_vm._v("      ")]),
                      _vm._v(" "),
                      _c(
                        "a",
                        {
                          staticClass: "btn btn-outline-info btn-icon",
                          attrs: {
                            href: "javascript:;",
                            "data-skin": "dark",
                            "data-toggle": "kt-tooltip",
                            "data-placement": "top",
                            title: "Agregar"
                          },
                          on: {
                            click: function($event) {
                              $event.preventDefault()
                              return _vm.agregarJefe($event)
                            }
                          }
                        },
                        [_c("i", { staticClass: "fa fa-plus" })]
                      ),
                      _vm._v(" \n              ")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(4),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.datosJefe, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [_vm._v(_vm._s(index + 1))]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [
                                          _vm._v(
                                            _vm._s(item.tipo_id) +
                                              " : " +
                                              _vm._s(item.identificacion)
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [
                                          _vm._v(
                                            _vm._s(item.pnom) +
                                              " " +
                                              _vm._s(item.snom) +
                                              " " +
                                              _vm._s(item.pape) +
                                              " " +
                                              _vm._s(item.sape)
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.sexo))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoParentesco))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.fecha_nacimiento))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.edad))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.telefono))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoEstado))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoOcupacion))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoEtnia))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [
                                          _vm._v(
                                            _vm._s(item.textoClasificacion)
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "text-align": "center",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c(
                                        "button",
                                        {
                                          staticClass:
                                            "btn btn-icon btn-sm btn-outline-danger",
                                          attrs: {
                                            type: "button",
                                            title: "Eliminar"
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.eliminarItem(
                                                index,
                                                item
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c("i", {
                                            staticClass: "fa fa-trash"
                                          })
                                        ]
                                      )
                                    ]
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(5),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo de Documento:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.tipo_id == "0" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.formato("tipoid2")
                              }
                            },
                            model: {
                              value: _vm.CA1.tipo_id,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "tipo_id", $$v)
                              },
                              expression: "CA1.tipo_id"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CC" } }, [
                              _vm._v("CEDULA DE CIUDADANIA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PA" } }, [
                              _vm._v("PASAPORTE")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "RC" } }, [
                              _vm._v("REGISTRO CIVIL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TI" } }, [
                              _vm._v("TARJETA DE IDENTIDAD")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ASI" } }, [
                              _vm._v("ADULTO SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MSI" } }, [
                              _vm._v("MENOR SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CE" } }, [
                              _vm._v("CEDULA DE EXTRANJERIA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Documento:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.identificacion,
                            expression: "CA1.identificacion"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.identificacion == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Documento" },
                        domProps: { value: _vm.CA1.identificacion },
                        on: {
                          change: function($event) {
                            return _vm.formato("id2")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.CA1,
                              "identificacion",
                              $event.target.value
                            )
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Sexo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.sexo == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.sexo,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "sexo", $$v)
                              },
                              expression: "CA1.sexo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MASCULINO" } }, [
                              _vm._v("MASCULINO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FEMENINO" } }, [
                              _vm._v("FEMENINO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Parentesco:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.parentesco == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.parentesco,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "parentesco", $$v)
                              },
                              expression: "CA1.parentesco"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.parentesco_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Nombre:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.pnom,
                            expression: "CA1.pnom"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.pnom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Nombre" },
                        domProps: { value: _vm.CA1.pnom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "pnom", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Nombre:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.snom,
                            expression: "CA1.snom"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.snom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Segundo Nombre" },
                        domProps: { value: _vm.CA1.snom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "snom", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Apellido:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.pape,
                            expression: "CA1.pape"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.pape == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Apellido" },
                        domProps: { value: _vm.CA1.pape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "pape", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Apellido:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.sape,
                            expression: "CA1.sape"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.sape == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Segundo Apellido"
                        },
                        domProps: { value: _vm.CA1.sape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "sape", $event.target.value)
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Estado Civil:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.estado_civil == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.estado_civil,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "estado_civil", $$v)
                              },
                              expression: "CA1.estado_civil"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.estado_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Fecha de Nacimiento:")]),
                        _vm._v(" "),
                        _c("datepicker", {
                          class: _vm.CA1.fecha_nac == "" ? "" : "is-valid",
                          attrs: {
                            placeholder: "Fecha de Nacimiento",
                            format: _vm.format,
                            language: _vm.lenguaje
                          },
                          model: {
                            value: _vm.CA1.fecha_nac,
                            callback: function($$v) {
                              _vm.$set(_vm.CA1, "fecha_nac", $$v)
                            },
                            expression: "CA1.fecha_nac"
                          }
                        })
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Edad:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.calEdad,
                            expression: "calEdad"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.edad == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Edad",
                          readonly: ""
                        },
                        domProps: { value: _vm.calEdad },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.calEdad = $event.target.value
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-9" },
                      [
                        _c("label", [_vm._v("Afiliación SGSSS Entidad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.afi_entidad == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.afi_entidad,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "afi_entidad", $$v)
                              },
                              expression: "CA1.afi_entidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NINGUNA" } }, [
                              _vm._v("NINGUNA")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.admini_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo Afiliación:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.tipo_afiliacion == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.tipo_afiliacion,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "tipo_afiliacion", $$v)
                              },
                              expression: "CA1.tipo_afiliacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SUBSIDIADO" } }, [
                              _vm._v("SUBSIDIADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CONTRIBUTIVO" } }, [
                              _vm._v("CONTRIBUTIVO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ESPECIAL" } }, [
                              _vm._v("ESPECIAL")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.embarazo == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.embarazo,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "embarazo", $$v)
                              },
                              expression: "CA1.embarazo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo Multiple:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.embarazo_multiple == "0"
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.CA1.embarazo_multiple,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "embarazo_multiple", $$v)
                              },
                              expression: "CA1.embarazo_multiple"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Discapacidad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.discapacidad == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.discapacidad,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "discapacidad", $$v)
                              },
                              expression: "CA1.discapacidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Nivel de Escolaridad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.escolaridad == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.escolaridad,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "escolaridad", $$v)
                              },
                              expression: "CA1.escolaridad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.escolaridad_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Ocupación:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.ocupacion == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.ocupacion,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "ocupacion", $$v)
                              },
                              expression: "CA1.ocupacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.ocupacion_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-6" }, [
                      _c("label", [_vm._v("Colegio:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.colegio,
                            expression: "CA1.colegio"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.colegio == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Colegio" },
                        domProps: { value: _vm.CA1.colegio },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "colegio", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Grado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.grado == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.grado,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "grado", $$v)
                              },
                              expression: "CA1.grado"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Sexto" } }, [
                              _vm._v("Sexto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Septimo" } }, [
                              _vm._v("Septimo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Octavo" } }, [
                              _vm._v("Octavo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Noveno" } }, [
                              _vm._v("Noveno")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Decimo" } }, [
                              _vm._v("Decimo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Undecimo" } }, [
                              _vm._v("Undecimo")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Etnia:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.etnia == "0" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("etnia")
                              }
                            },
                            model: {
                              value: _vm.CA1.etnia,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "etnia", $$v)
                              },
                              expression: "CA1.etnia"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.etnia_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Clasificación de la Etnia:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.clasificacion == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.clasificacion,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "clasificacion", $$v)
                              },
                              expression: "CA1.clasificacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.clasifi_options[_vm.CA1.etnia], function(
                              item
                            ) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Entiende Español:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.entiende == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.entiende,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "entiende", $$v)
                              },
                              expression: "CA1.entiende"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("PYP:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.pyp == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.pyp,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "pyp", $$v)
                              },
                              expression: "CA1.pyp"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Crecimiento" } }, [
                              _vm._v("Crecimiento y Desarrollo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Joven" } }, [
                              _vm._v("Joven")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Adulto" } }, [
                              _vm._v("Adulto Mayor")
                            ]),
                            _vm._v(" "),
                            _c(
                              "option",
                              { attrs: { value: "Planificacion" } },
                              [_vm._v("Planificación Familiar")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Control" } }, [
                              _vm._v("Control Prenatal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Migrente:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.migrante == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.migrante,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "migrante", $$v)
                              },
                              expression: "CA1.migrante"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-1" }, [
                      _c("br"),
                      _vm._v(" "),
                      _c("label", [_vm._v("      ")]),
                      _vm._v(" "),
                      _c(
                        "a",
                        {
                          staticClass: "btn btn-outline-info btn-icon",
                          attrs: {
                            href: "javascript:;",
                            "data-skin": "dark",
                            "data-toggle": "kt-tooltip",
                            "data-placement": "top",
                            title: "Agregar"
                          },
                          on: {
                            click: function($event) {
                              $event.preventDefault()
                              return _vm.agregar($event)
                            }
                          }
                        },
                        [_c("i", { staticClass: "fa fa-plus" })]
                      ),
                      _vm._v(" \n              ")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(6),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.datos, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [_vm._v(_vm._s(index + 1))]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [
                                          _vm._v(
                                            _vm._s(item.tipo_id) +
                                              " : " +
                                              _vm._s(item.identificacion)
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [
                                          _vm._v(
                                            _vm._s(item.pnom) +
                                              " " +
                                              _vm._s(item.snom) +
                                              " " +
                                              _vm._s(item.pape) +
                                              " " +
                                              _vm._s(item.sape)
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.sexo))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoParentesco))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.discapacidad))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoEscolaridad))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoOcupacion))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.textoEtnia))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.colegio))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.grado))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "text-align": "center",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c(
                                        "button",
                                        {
                                          staticClass:
                                            "btn btn-icon btn-sm btn-outline-danger",
                                          attrs: {
                                            type: "button",
                                            title: "Eliminar"
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.eliminarItem(
                                                index,
                                                item
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c("i", {
                                            staticClass: "fa fa-trash"
                                          })
                                        ]
                                      )
                                    ]
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "tabVivienda", role: "tabpanel" }
                },
                [
                  _vm._m(7),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo de Vivienda:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_vivienda.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_vivienda
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.tipo_vivienda.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_vivienda,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.tipo_vivienda.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Apartamento")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Cuarto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Vivienda Indigena")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Improvisada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Lote")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "8" } }, [
                              _vm._v("Finca")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Vivienda Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_vivienda.required
                            ? _c("span", [
                                _vm._v("El Tipo de Vivienda es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-2" },
                      [
                        _c("label", [_vm._v("Tipo de Estructura:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_estructura.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_estructura
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("TE")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.tipo_estructura.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_estructura,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.tipo_estructura.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Madera")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Concreto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Bahareque")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Estructura Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_estructura.required
                            ? _c("span", [
                                _vm._v("El Tipo de Estructura es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOTE,
                            expression: "mOTE"
                          }
                        ],
                        staticClass: "col-lg-7"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_tipo_estructura,
                              expression: "viviendaData.otro_tipo_estructura",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_tipo_estructura == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_tipo_estructura
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_tipo_estructura",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("# de Cuartos:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.$v.viviendaData.numero_cuartos.$model,
                            expression: "$v.viviendaData.numero_cuartos.$model",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: {
                          "is-invalid":
                            _vm.$v.viviendaData.numero_cuartos.$error,
                          "is-valid": !_vm.$v.viviendaData.numero_cuartos
                            .$invalid
                        },
                        attrs: { type: "text", placeholder: "# de Cuartos" },
                        domProps: {
                          value: _vm.$v.viviendaData.numero_cuartos.$model
                        },
                        on: {
                          blur: [
                            function($event) {
                              return _vm.$v.viviendaData.numero_cuartos.$touch()
                            },
                            function($event) {
                              return _vm.$forceUpdate()
                            }
                          ],
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.$v.viviendaData.numero_cuartos,
                              "$model",
                              $event.target.value.trim()
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("div", { staticClass: "valid-feedback" }, [
                        _vm._v("El Numero de Cuartos es Valido")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        !_vm.$v.viviendaData.numero_cuartos.required
                          ? _c("span", [
                              _vm._v("El Numero de Cuartos es obligatorio")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.$v.viviendaData.numero_cuartos.numeric
                          ? _c("span", [
                              _vm._v("El Numero de Cuartos debe ser Numerico")
                            ])
                          : _vm._e()
                      ])
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Personas por Cuarto:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value:
                              _vm.$v.viviendaData.personas_por_cuartos.$model,
                            expression:
                              "$v.viviendaData.personas_por_cuartos.$model",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: {
                          "is-invalid":
                            _vm.$v.viviendaData.personas_por_cuartos.$error,
                          "is-valid": !_vm.$v.viviendaData.personas_por_cuartos
                            .$invalid
                        },
                        attrs: {
                          type: "text",
                          placeholder: "Personas por Cuarto"
                        },
                        domProps: {
                          value: _vm.$v.viviendaData.personas_por_cuartos.$model
                        },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.$v.viviendaData.personas_por_cuartos,
                              "$model",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("div", { staticClass: "valid-feedback" }, [
                        _vm._v("Personas por Cuarto es Valido")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        !_vm.$v.viviendaData.personas_por_cuartos.required
                          ? _c("span", [
                              _vm._v("Personas por Cuarto es obligatorio")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.$v.viviendaData.personas_por_cuartos.numeric
                          ? _c("span", [
                              _vm._v("Personas por Cuarto debe ser Numerico")
                            ])
                          : _vm._e()
                      ])
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Materia Predominante Piso:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.material_predominante
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .material_predominante.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.material_predominante
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.material_predominante,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.material_predominante.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Tierra")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Madera")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Cemento")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Baldosas,vinilo,ladrillos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Alfombra,tapete,pared")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Marmol,parqué,madera pulida")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Materia Predominante Piso Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.material_predominante.required
                            ? _c("span", [
                                _vm._v(
                                  "El Materia Predominante Piso es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo de Cubierta:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_cubierta.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_cubierta
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("TC")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.tipo_cubierta.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_cubierta,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.tipo_cubierta.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Tejas de barro cemento")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Lamninas de zinc")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Paja")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Cubierta Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_cubierta.required
                            ? _c("span", [
                                _vm._v("El Tipo de Cubierta es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOTC,
                            expression: "mOTC"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_tipo_cubierta,
                              expression: "viviendaData.otro_tipo_cubierta",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_tipo_cubierta == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_tipo_cubierta
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_tipo_cubierta",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-2" },
                      [
                        _c("label", [_vm._v("Actividad Economica:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.actividad_economica.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .actividad_economica.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("AE")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.actividad_economica.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.actividad_economica,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.actividad_economica.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CUAL" } }, [
                              _vm._v("CUAL")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Actividad Economica Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.actividad_economica.required
                            ? _c("span", [
                                _vm._v("La Actividad Economica es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOAE,
                            expression: "mOAE"
                          }
                        ],
                        staticClass: "col-lg-10"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_actividad_economica,
                              expression:
                                "viviendaData.cual_actividad_economica",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_actividad_economica == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.cual_actividad_economica
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_actividad_economica",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Evento que Puede Afectar la Vivienda:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.evento_afecta_vivienda
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .evento_afecta_vivienda.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.evento_afecta_vivienda
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.evento_afecta_vivienda,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.evento_afecta_vivienda.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Inundación")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Arroyo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Oleaje Fuerte")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Deslizamiento")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Evento que Puede Afectar la Vivienda Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.evento_afecta_vivienda.required
                            ? _c("span", [
                                _vm._v(
                                  "El Evento que Puede Afectar la Vivienda es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Pertenece a Familias en Acción:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.familias_accion.$error,
                              "is-valid": !_vm.$v.viviendaData.familias_accion
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.familias_accion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.familias_accion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.familias_accion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Pertenece a Familias en Acción Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.familias_accion.required
                            ? _c("span", [
                                _vm._v(
                                  "Pertenece a Familias en Acción es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Promedio de Ingresos Mensuales:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.promedio_ingresos.$error,
                              "is-valid": !_vm.$v.viviendaData.promedio_ingresos
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.promedio_ingresos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.promedio_ingresos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.promedio_ingresos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Menos de un salario minimo legal vigente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Un salario minimo legal vigente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Mas de un salario minimo legal vigente")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Promedio de Ingresos Mensuales Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.promedio_ingresos.required
                            ? _c("span", [
                                _vm._v(
                                  "El Promedio de Ingresos Mensuales es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Prom. de Gastos Mens. En Servicios Publicos:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.promedio_gastos.$error,
                              "is-valid": !_vm.$v.viviendaData.promedio_gastos
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.promedio_gastos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.promedio_gastos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.promedio_gastos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Menos de $100.000")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Entre $100.000 y $300.000")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Mas de $300.000")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Prom. de Gastos Mens. En Servicios Publicos Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.promedio_gastos.required
                            ? _c("span", [
                                _vm._v(
                                  "El Prom. de Gastos Mens. En Servicios Publicos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Servicios Basicos:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.servicios_basicos.$error,
                              "is-valid": !_vm.$v.viviendaData.servicios_basicos
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.servicios_basicos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.servicios_basicos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.servicios_basicos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Servicios Basicos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.servicios_basicos.required
                            ? _c("span", [
                                _vm._v("Servicios Basicos es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Fuente de Agua para Consumo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.fuente_agua.$error,
                              "is-valid": !_vm.$v.viviendaData.fuente_agua
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("FA")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.fuente_agua.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.fuente_agua,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.fuente_agua.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Acueducto publico")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Acueducto veredal comunal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Pozo con bomba")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Laguna o jaguey")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Rio quebrada ó manantial")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Aguas lluvias")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Carro tanque")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "8" } }, [
                              _vm._v("Agua embotellada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "9" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Fuente de Agua para Consumo Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.fuente_agua.required
                            ? _c("span", [
                                _vm._v(
                                  "Fuente de Agua para Consumo es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOFA,
                            expression: "mOFA"
                          }
                        ],
                        staticClass: "col-lg-4"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_fuente,
                              expression: "viviendaData.cual_fuente",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_fuente == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.viviendaData.cual_fuente },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_fuente",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Donde se Almacena el Agua:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.donde_almacena_agua.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .donde_almacena_agua.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("DA")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.donde_almacena_agua.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.donde_almacena_agua,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.donde_almacena_agua.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No almacenan")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Tanque")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Alberca")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Planta acuatica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Donde se Almacena el Agua Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.donde_almacena_agua.required
                            ? _c("span", [
                                _vm._v(
                                  "Donde se Almacena el Agua es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mODA,
                            expression: "mODA"
                          }
                        ],
                        staticClass: "col-lg-8"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_almacena_agua,
                              expression: "viviendaData.otro_almacena_agua",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_almacena_agua == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_almacena_agua
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_almacena_agua",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Ubicación del Tanque:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.ubicacion_tanque.$error,
                              "is-valid": !_vm.$v.viviendaData.ubicacion_tanque
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.ubicacion_tanque.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.ubicacion_tanque,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.ubicacion_tanque.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Interior de la vivienda")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Exterior de la vivienda bajo techo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Exterior de la vivienda sin techo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Ubicación del Tanque Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.ubicacion_tanque.required
                            ? _c("span", [
                                _vm._v("Ubicación del Tanque es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tipo de Tratamiento del Agua:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_tratamiento_agua
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .tipo_tratamiento_agua.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.tipo_tratamiento_agua
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_tratamiento_agua,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.tipo_tratamiento_agua.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Clorada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Filtrada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Hervida")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Consume sin tratamiento")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Tratamiento del Agua Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_tratamiento_agua.required
                            ? _c("span", [
                                _vm._v(
                                  "El Tipo de Tratamiento del Agua es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Destino final de la Basura:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.destino_final_basura.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .destino_final_basura.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("FB")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.destino_final_basura.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.destino_final_basura,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.destino_final_basura.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Aseo municipal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Quemada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Cielo Abierto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Enterrada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Destino final de la Basura Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.destino_final_basura.required
                            ? _c("span", [
                                _vm._v(
                                  "El Destino final de la Basura es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOFB,
                            expression: "mOFB"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_destino_final_basura,
                              expression:
                                "viviendaData.otro_destino_final_basura",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_destino_final_basura == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_destino_final_basura
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_destino_final_basura",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(8),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Porquerizas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.porquerizas.$error,
                              "is-valid": !_vm.$v.viviendaData.porquerizas
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.porquerizas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.porquerizas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.porquerizas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Porquerizas Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.porquerizas.required
                            ? _c("span", [_vm._v("Porquerizas es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Plagas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.plagas.$error,
                              "is-valid": !_vm.$v.viviendaData.plagas.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.plagas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.plagas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.plagas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Plagas Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.plagas.required
                            ? _c("span", [_vm._v("Plagas es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Industrias Contaminantes:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.industrias.$error,
                              "is-valid": !_vm.$v.viviendaData.industrias
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.industrias.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.industrias,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.industrias.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Industrias Contaminantes Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.industrias.required
                            ? _c("span", [
                                _vm._v(
                                  "Industrias Contaminantes es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Malos Olores:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.malos_olores.$error,
                              "is-valid": !_vm.$v.viviendaData.malos_olores
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.malos_olores.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.malos_olores,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.malos_olores.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Malos Olores Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.malos_olores.required
                            ? _c("span", [
                                _vm._v("Malos Olores es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Rellenos Sanitarios:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.rellenos.$error,
                              "is-valid": !_vm.$v.viviendaData.rellenos.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.rellenos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.rellenos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.rellenos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Rellenos Sanitarios Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.rellenos.required
                            ? _c("span", [
                                _vm._v("Rellenos Sanitarios es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Contaminación Auditiva:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.contaminacion_a.$error,
                              "is-valid": !_vm.$v.viviendaData.contaminacion_a
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.contaminacion_a.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.contaminacion_a,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.contaminacion_a.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Contaminación Auditiva Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.contaminacion_a.required
                            ? _c("span", [
                                _vm._v("Contaminación Auditiva es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Contaminación Visual:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.contaminacion_v.$error,
                              "is-valid": !_vm.$v.viviendaData.contaminacion_v
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.contaminacion_v.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.contaminacion_v,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.contaminacion_v.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Contaminación Visual Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.contaminacion_v.required
                            ? _c("span", [
                                _vm._v("Contaminación Visual es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Rio ó Quebrada:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.rio.$error,
                              "is-valid": !_vm.$v.viviendaData.rio.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.rio.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.rio,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.rio.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Rio ó Quebrada Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.rio.required
                            ? _c("span", [
                                _vm._v("Rio ó Quebrada es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Otro:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.otro_cerca.$error,
                              "is-valid": !_vm.$v.viviendaData.otro_cerca
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("OC")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.otro_cerca.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.otro_cerca,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.otro_cerca.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Otro Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.otro_cerca.required
                            ? _c("span", [_vm._v("Otro es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOOC,
                            expression: "mOOC"
                          }
                        ],
                        staticClass: "col-lg-9"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_cerca,
                              expression: "viviendaData.cual_cerca",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_cerca == "" ? "" : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.viviendaData.cual_cerca },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_cerca",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(9),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Animal:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.animal,
                            expression: "animal"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        attrs: { type: "text", placeholder: "Animal" },
                        domProps: { value: _vm.animal },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.animal = $event.target.value
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Cuantos:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.cuantosAnimal,
                            expression: "cuantosAnimal"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        attrs: {
                          type: "number",
                          min: "1",
                          placeholder: "Cuantos"
                        },
                        domProps: { value: _vm.cuantosAnimal },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.cuantosAnimal = $event.target.value
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Vacunados:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            model: {
                              value: _vm.vacunadoAnimal,
                              callback: function($$v) {
                                _vm.vacunadoAnimal = $$v
                              },
                              expression: "vacunadoAnimal"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-1" }, [
                      _c("br"),
                      _vm._v(" "),
                      _c("label", [_vm._v("       ")]),
                      _vm._v(" "),
                      _c(
                        "a",
                        {
                          staticClass: "btn btn-outline-info btn-icon",
                          attrs: {
                            href: "javascript:;",
                            "data-skin": "dark",
                            "data-toggle": "kt-tooltip",
                            "data-placement": "top",
                            title: "Agregar"
                          },
                          on: {
                            click: function($event) {
                              $event.preventDefault()
                              return _vm.agregarAnimales($event)
                            }
                          }
                        },
                        [_c("i", { staticClass: "fa fa-plus" })]
                      ),
                      _vm._v(" \n              ")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(10),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.animalesData, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [_vm._v(_vm._s(index + 1))]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.animal))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.cuantos))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.vacunados))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "text-align": "center",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c(
                                        "button",
                                        {
                                          staticClass:
                                            "btn btn-icon btn-sm btn-outline-danger",
                                          attrs: {
                                            type: "button",
                                            title: "Eliminar"
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.eliminarItemAnimales(
                                                index
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c("i", {
                                            staticClass: "fa fa-trash"
                                          })
                                        ]
                                      )
                                    ]
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [_vm._v("El Servicio Sanitario Es:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.servicio_sanitario.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .servicio_sanitario.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.servicio_sanitario.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.servicio_sanitario,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.servicio_sanitario.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v(
                                "De Uso Exclusivo de las Personas de la Familia"
                              )
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v(
                                "Compartida con Personas de Otras Familias"
                              )
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Servicio Sanitario Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.servicio_sanitario.required
                            ? _c("span", [
                                _vm._v("El Servicio Sanitario es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Donde se Encuentra el Sanitario,Inodoro Ó Letrina:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.donde_sanitario.$error,
                              "is-valid": !_vm.$v.viviendaData.donde_sanitario
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.donde_sanitario.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.donde_sanitario,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.donde_sanitario.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Fuera de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Patio")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Dentro de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Sanitario,Inodoro Ó Letrina Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.donde_sanitario.required
                            ? _c("span", [
                                _vm._v(
                                  "El Sanitario,Inodoro Ó Letrina es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("Donde se Disponen las Excretas (HECES):")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.excretas.$error,
                              "is-valid": !_vm.$v.viviendaData.excretas.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.excretas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.excretas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.excretas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Inodoro conectado al alcantarillado")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Inodoro conectado al pozo séptico")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Inodoro con descarga al aire libre")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Letrina")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("ICampo abierto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Campo abierto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("En agua corriente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "8" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Donde se Disponen las Excretas (HECES) Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.excretas.required
                            ? _c("span", [
                                _vm._v(
                                  "Donde se Disponen las Excretas (HECES) es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(11),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Cocina:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.cocina.$error,
                              "is-valid": !_vm.$v.viviendaData.cocina.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.cocina.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.cocina,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.cocina.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Cocina Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.cocina.required
                            ? _c("span", [_vm._v("La Cocina es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Dormitorio Adultos:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.dormitorio_a.$error,
                              "is-valid": !_vm.$v.viviendaData.dormitorio_a
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.dormitorio_a.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.dormitorio_a,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.dormitorio_a.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Dormitorio Adultos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.dormitorio_a.required
                            ? _c("span", [
                                _vm._v("El Dormitorio Adultos es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Sala Comedor:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.sala.$error,
                              "is-valid": !_vm.$v.viviendaData.sala.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.sala.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.sala,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.sala.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Sala Comedor Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.sala.required
                            ? _c("span", [
                                _vm._v("La Sala Comedor es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Dormitorio Niño:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.dormitorio_n.$error,
                              "is-valid": !_vm.$v.viviendaData.dormitorio_n
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.dormitorio_n.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.dormitorio_n,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.dormitorio_n.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Dormitorio Niño Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.dormitorio_n.required
                            ? _c("span", [
                                _vm._v("El Dormitorio Niño es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Sanitario:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.sanitario.$error,
                              "is-valid": !_vm.$v.viviendaData.sanitario
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.sanitario.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.sanitario,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.sanitario.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Sanitario Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.sanitario.required
                            ? _c("span", [
                                _vm._v("El Sanitario es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Lavadero:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.lavadero.$error,
                              "is-valid": !_vm.$v.viviendaData.lavadero.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.lavadero.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.lavadero,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.lavadero.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Lavadero Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lavadero.required
                            ? _c("span", [_vm._v("El Lavadero es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(12),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Iluminación Adecuada:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.iluminacion_adecuada.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .iluminacion_adecuada.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.iluminacion_adecuada.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.iluminacion_adecuada,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.iluminacion_adecuada.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Iluminación Adecuada Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.iluminacion_adecuada.required
                            ? _c("span", [
                                _vm._v("La Iluminación Adecuada es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Techo Adecuado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.techo_adecuado.$error,
                              "is-valid": !_vm.$v.viviendaData.techo_adecuado
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.techo_adecuado.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.techo_adecuado,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.techo_adecuado.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Techo Adecuado Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.techo_adecuado.required
                            ? _c("span", [
                                _vm._v("El Techo Adecuado es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Ventilación Adecuada:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.ventilacion_adecuada.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .ventilacion_adecuada.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.ventilacion_adecuada.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.ventilacion_adecuada,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.ventilacion_adecuada.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Ventilación Adecuada Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.ventilacion_adecuada.required
                            ? _c("span", [
                                _vm._v("La Ventilación Adecuada es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Pisos Adecuados:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.pisos_adecuado.$error,
                              "is-valid": !_vm.$v.viviendaData.pisos_adecuado
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.pisos_adecuado.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.pisos_adecuado,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.pisos_adecuado.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Pisos Adecuados Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.pisos_adecuado.required
                            ? _c("span", [
                                _vm._v("El Pisos Adecuados es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Paredes Adecuadas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.paredes_adecuadas.$error,
                              "is-valid": !_vm.$v.viviendaData.paredes_adecuadas
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.paredes_adecuadas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.paredes_adecuadas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.paredes_adecuadas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Paredes Adecuadas Validas")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.paredes_adecuadas.required
                            ? _c("span", [
                                _vm._v("Las Paredes Adecuadas es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(13),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Gasolina:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.gasolina.$error,
                              "is-valid": !_vm.$v.viviendaData.gasolina.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.gasolina.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.gasolina,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.gasolina.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Gasolina Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.gasolina.required
                            ? _c("span", [_vm._v("La Gasolina es obligatoria")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Plaguicidas Agricolas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.plaguicidas.$error,
                              "is-valid": !_vm.$v.viviendaData.plaguicidas
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.plaguicidas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.plaguicidas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.plaguicidas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Plaguicidas Agricolas Validas")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.plaguicidas.required
                            ? _c("span", [
                                _vm._v(
                                  "Los Plaguicidas Agricolas es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Detergentes/Desifectantes:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.detergentes.$error,
                              "is-valid": !_vm.$v.viviendaData.detergentes
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.detergentes.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.detergentes,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.detergentes.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Detergentes/Desifectantes Validos")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.detergentes.required
                            ? _c("span", [
                                _vm._v(
                                  "Los Detergentes/Desifectantes son obligatorios"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Plaguicidas Para Insectos:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.plaguicidas_insectos.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .plaguicidas_insectos.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.plaguicidas_insectos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.plaguicidas_insectos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.plaguicidas_insectos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Plaguicidas Para Insectos Validos")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.plaguicidas_insectos.required
                            ? _c("span", [
                                _vm._v(
                                  "Los Plaguicidas Para Insectos son obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Uso Final Que Le Dan A Los Envases Vacios De Los Plaguicidas:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.envases_vacios.$error,
                              "is-valid": !_vm.$v.viviendaData.envases_vacios
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("EV")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.envases_vacios.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.envases_vacios,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.envases_vacios.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("NO APLICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Guardar alimentos y agua")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Para varios usos en el hogar")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Los botan a la basura")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Los entierran")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Los queman")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Uso Final Que Le Dan A Los Envases Vacios De Los Plaguicidas Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.envases_vacios.required
                            ? _c("span", [
                                _vm._v(
                                  "El Uso Final Que Le Dan A Los Envases Vacios De Los Plaguicidas es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOEV,
                            expression: "mOEV"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_envases_vacios,
                              expression: "viviendaData.otro_envases_vacios",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_envases_vacios == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_envases_vacios
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_envases_vacios",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Con Que Tipo De Elementos Se Protegen Contra Animales,Plagas:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.elementos_protecion.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .elementos_protecion.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("EP")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.elementos_protecion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.elementos_protecion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.elementos_protecion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Toldillos/mosquiteros")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Anjeos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Fumigación con insecticidas/plaguicidas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Raticidas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Con Que Tipo De Elementos Se Protegen Contra Animales,Plagas Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.elementos_protecion.required
                            ? _c("span", [
                                _vm._v(
                                  "El Tipo De Elementos Con Que Se Protegen Contra Animales,Plagas es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOEP,
                            expression: "mOEP"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_elementos_protecion,
                              expression:
                                "viviendaData.otro_elementos_protecion",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_elementos_protecion == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_elementos_protecion
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_elementos_protecion",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("Metodo de cocción de los alimentos:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.metodos_coccion.$error,
                              "is-valid": !_vm.$v.viviendaData.metodos_coccion
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("MC")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.metodos_coccion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.metodos_coccion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.metodos_coccion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Estufa a gas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Estufa electrica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Estufa a gasolina")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Leña")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Carbon")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Metodo de cocción de los alimentos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.metodos_coccion.required
                            ? _c("span", [
                                _vm._v(
                                  "El Metodo de cocción de los alimentos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOMC,
                            expression: "mOMC"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_metodos_coccion,
                              expression: "viviendaData.otro_metodos_coccion",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_metodos_coccion == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_metodos_coccion
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_metodos_coccion",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "En cual de los siguientes lugares preparan los alimentos:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lugares_preparan_alimentos
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .lugares_preparan_alimentos.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.lugares_preparan_alimentos
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData
                                    .lugares_preparan_alimentos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.lugares_preparan_alimentos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("En un cuarto usado solo para cocinar")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("En un cuarto usado tambien para dormir")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("En una sala comedor con lavaplatos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("En una sala comedor sin lavaplatos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("En un patio comedor al aire libre")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("En ninguna parte(no preparan alimentos)")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "En cual de los siguientes lugares preparan los alimentos Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lugares_preparan_alimentos
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "En cual de los siguientes lugares preparan los alimentos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Antes de consumir frutas y verduras las lava:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lava_frutas.$error,
                              "is-valid": !_vm.$v.viviendaData.lava_frutas
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.lava_frutas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.lava_frutas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.lava_frutas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Antes de consumir frutas y verduras las lava Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lava_frutas.required
                            ? _c("span", [
                                _vm._v(
                                  "Antes de consumir frutas y verduras las lava es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("Metodo de cocción de los alimentos:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lugares_almacenan_alimentos
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .lugares_almacenan_alimentos.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("AA")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.lugares_almacenan_alimentos
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData
                                    .lugares_almacenan_alimentos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.lugares_almacenan_alimentos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Refrigerador")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Recipientes Abiertos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Recipientes Cerrados")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Al aire libre dentro de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("AL aire libre fuera de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Metodo de cocción de los alimentos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lugares_almacenan_alimentos
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "El Metodo de cocción de los alimentos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOAA,
                            expression: "mOAA"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value:
                                _vm.viviendaData
                                  .otro_lugares_almacenan_alimentos,
                              expression:
                                "viviendaData.otro_lugares_almacenan_alimentos",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_lugares_almacenan_alimentos ==
                            ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value:
                              _vm.viviendaData.otro_lugares_almacenan_alimentos
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_lugares_almacenan_alimentos",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "cartxciclo", role: "tabpanel" }
                },
                [
                  _vm._m(14),
                  _vm._v(" "),
                  _vm._m(15),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          {
                            staticClass: "table table-sm table-hover",
                            staticStyle: { width: "100%" }
                          },
                          [
                            _vm._m(16),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.Men1A, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(lugar_nacimiento) {
                                              return _vm.updateMenA1(
                                                item,
                                                lugar_nacimiento,
                                                "lugar_nacimiento"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.lugar_nacimiento,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "lugar_nacimiento",
                                                $$v
                                              )
                                            },
                                            expression: "item.lugar_nacimiento"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "HOSPITAL" } },
                                            [_vm._v("HOSPITAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "CASA" } },
                                            [_vm._v("CASA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(hemoclasificacion) {
                                              return _vm.updateMenA1(
                                                item,
                                                hemoclasificacion,
                                                "hemoclasificacion"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.hemoclasificacion,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "hemoclasificacion",
                                                $$v
                                              )
                                            },
                                            expression: "item.hemoclasificacion"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "200px" },
                                          on: {
                                            input: function(compli_parto) {
                                              return _vm.updateMenA1(
                                                item,
                                                compli_parto,
                                                "compli_parto"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.compli_parto,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "compli_parto",
                                                $$v
                                              )
                                            },
                                            expression: "item.compli_parto"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(via_parto) {
                                              return _vm.updateMenA1(
                                                item,
                                                via_parto,
                                                "via_parto"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.via_parto,
                                            callback: function($$v) {
                                              _vm.$set(item, "via_parto", $$v)
                                            },
                                            expression: "item.via_parto"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "CESAREA" } },
                                            [_vm._v("CESAREA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "PARTO" } },
                                            [_vm._v("PARTO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cyc) {
                                              return _vm.updateMenA1(
                                                item,
                                                cyc,
                                                "cyc"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cyc,
                                            callback: function($$v) {
                                              _vm.$set(item, "cyc", $$v)
                                            },
                                            expression: "item.cyc"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(valoracion_23) {
                                              return _vm.updateMenA1(
                                                item,
                                                valoracion_23,
                                                "valoracion_23"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.valoracion_23,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "valoracion_23",
                                                $$v
                                              )
                                            },
                                            expression: "item.valoracion_23"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(valoracion_68) {
                                              return _vm.updateMenA1(
                                                item,
                                                valoracion_68,
                                                "valoracion_68"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.valoracion_68,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "valoracion_68",
                                                $$v
                                              )
                                            },
                                            expression: "item.valoracion_68"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(valoracion_911) {
                                              return _vm.updateMenA1(
                                                item,
                                                valoracion_911,
                                                "valoracion_911"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.valoracion_911,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "valoracion_911",
                                                $$v
                                              )
                                            },
                                            expression: "item.valoracion_911"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(lactancia) {
                                              return _vm.updateMenA1(
                                                item,
                                                lactancia,
                                                "lactancia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.lactancia,
                                            callback: function($$v) {
                                              _vm.$set(item, "lactancia", $$v)
                                            },
                                            expression: "item.lactancia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso_nacer,
                                            expression: "item.peso_nacer"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso_nacer },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso_nacer",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMenA1(
                                                item,
                                                $event,
                                                "peso_nacer"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso_actual,
                                            expression: "item.peso_actual"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso_actual },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso_actual",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMenA1(
                                                item,
                                                $event,
                                                "peso_actual"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.longitud_nacer,
                                            expression: "item.longitud_nacer"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: {
                                          value: item.longitud_nacer
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "longitud_nacer",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMenA1(
                                                item,
                                                $event,
                                                "longitud_nacer"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.longitud_actual,
                                            expression: "item.longitud_actual"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: {
                                          value: item.longitud_actual
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "longitud_actual",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMenA1(
                                                item,
                                                $event,
                                                "longitud_actual"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso_long,
                                            expression: "item.peso_long"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "160px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso_long },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso_long",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMenA1(
                                                item,
                                                $event,
                                                "peso_long"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cinta) {
                                              return _vm.updateMenA1(
                                                item,
                                                cinta,
                                                "cinta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cinta,
                                            callback: function($$v) {
                                              _vm.$set(item, "cinta", $$v)
                                            },
                                            expression: "item.cinta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "PC" } },
                                            [_vm._v("P.C")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "PB" } },
                                            [_vm._v("P.B")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(edemas) {
                                              return _vm.updateMenA1(
                                                item,
                                                edemas,
                                                "edemas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.edemas,
                                            callback: function($$v) {
                                              _vm.$set(item, "edemas", $$v)
                                            },
                                            expression: "item.edemas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(lenguaje) {
                                              return _vm.updateMenA1(
                                                item,
                                                lenguaje,
                                                "lenguaje"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.lenguaje,
                                            callback: function($$v) {
                                              _vm.$set(item, "lenguaje", $$v)
                                            },
                                            expression: "item.lenguaje"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(motora) {
                                              return _vm.updateMenA1(
                                                item,
                                                motora,
                                                "motora"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.motora,
                                            callback: function($$v) {
                                              _vm.$set(item, "motora", $$v)
                                            },
                                            expression: "item.motora"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conducta) {
                                              return _vm.updateMenA1(
                                                item,
                                                conducta,
                                                "conducta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conducta,
                                            callback: function($$v) {
                                              _vm.$set(item, "conducta", $$v)
                                            },
                                            expression: "item.conducta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(visuales) {
                                              return _vm.updateMenA1(
                                                item,
                                                visuales,
                                                "visuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.visuales,
                                            callback: function($$v) {
                                              _vm.$set(item, "visuales", $$v)
                                            },
                                            expression: "item.visuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(auditivos) {
                                              return _vm.updateMenA1(
                                                item,
                                                auditivos,
                                                "auditivos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.auditivos,
                                            callback: function($$v) {
                                              _vm.$set(item, "auditivos", $$v)
                                            },
                                            expression: "item.auditivos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(carnet) {
                                              return _vm.updateMenA1(
                                                item,
                                                carnet,
                                                "carnet"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.carnet,
                                            callback: function($$v) {
                                              _vm.$set(item, "carnet", $$v)
                                            },
                                            expression: "item.carnet"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "DESAC" } },
                                            [_vm._v("DESAC")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(bcg) {
                                              return _vm.updateMenA1(
                                                item,
                                                bcg,
                                                "bcg"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.bcg,
                                            callback: function($$v) {
                                              _vm.$set(item, "bcg", $$v)
                                            },
                                            expression: "item.bcg"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(hepb) {
                                              return _vm.updateMenA1(
                                                item,
                                                hepb,
                                                "hepb"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.hepb,
                                            callback: function($$v) {
                                              _vm.$set(item, "hepb", $$v)
                                            },
                                            expression: "item.hepb"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(polio) {
                                              return _vm.updateMenA1(
                                                item,
                                                polio,
                                                "polio"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.polio,
                                            callback: function($$v) {
                                              _vm.$set(item, "polio", $$v)
                                            },
                                            expression: "item.polio"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "RN" } },
                                            [_vm._v("RN")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("2")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("3")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(pentavalente) {
                                              return _vm.updateMenA1(
                                                item,
                                                pentavalente,
                                                "pentavalente"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.pentavalente,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "pentavalente",
                                                $$v
                                              )
                                            },
                                            expression: "item.pentavalente"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("2")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("3")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(maltrato) {
                                              return _vm.updateMenA1(
                                                item,
                                                maltrato,
                                                "maltrato"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.maltrato,
                                            callback: function($$v) {
                                              _vm.$set(item, "maltrato", $$v)
                                            },
                                            expression: "item.maltrato"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(morbilidad) {
                                              return _vm.updateMenA1(
                                                item,
                                                morbilidad,
                                                "morbilidad"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.morbilidad,
                                            callback: function($$v) {
                                              _vm.$set(item, "morbilidad", $$v)
                                            },
                                            expression: "item.morbilidad"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [
                                              _vm._v(
                                                "Q89 Otras malformaciones congénitas, no clasificadas en otra parte."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [
                                              _vm._v(
                                                "P15 Otros traumatismos del nacimiento."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [
                                              _vm._v(
                                                "P05 Retardo del crecimiento y desnutrición fetal."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [
                                              _vm._v(
                                                "P22 Dificultad respiratoria del recién nacido."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [_vm._v("A33 Tétanos neonatal")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [
                                              _vm._v(
                                                "P38 Onfalitis del recién nacido con o sin hemorragia."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "7" } },
                                            [
                                              _vm._v(
                                                "P59 Ictericia neonatal por otras causas y por las no especificadas."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "8" } },
                                            [
                                              _vm._v(
                                                "P70 Trastornos endocrinos y metabólicos transitorios específicos del feto y del recién nacido."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "9" } },
                                            [
                                              _vm._v(
                                                "P78 Otros trastornos perinatales del sistema digestivo."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "10" } },
                                            [
                                              _vm._v(
                                                "P90 Convulciones del recién nacido."
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "11" } },
                                            [
                                              _vm._v(
                                                "111 Otra morbilidad no clasificada."
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tsh) {
                                              return _vm.updateMenA1(
                                                item,
                                                tsh,
                                                "tsh"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tsh,
                                            callback: function($$v) {
                                              _vm.$set(item, "tsh", $$v)
                                            },
                                            expression: "item.tsh"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("SI-NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("SI-ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("SI-NO SABE EL RESULTADO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("NO SE TOMO EL EXAMEN")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(17),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(18),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De1A5, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(beneficiario) {
                                              return _vm.updateDe1A5(
                                                item,
                                                beneficiario,
                                                "beneficiario"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.beneficiario,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "beneficiario",
                                                $$v
                                              )
                                            },
                                            expression: "item.beneficiario"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Hogares Comunitarios")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("ICBF")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("Desayuno Escolar")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("Jardin Social - CDI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [_vm._v("Otro")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cyc) {
                                              return _vm.updateDe1A5(
                                                item,
                                                cyc,
                                                "cyc"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cyc,
                                            callback: function($$v) {
                                              _vm.$set(item, "cyc", $$v)
                                            },
                                            expression: "item.cyc"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(valoracion_1823) {
                                              return _vm.updateDe1A5(
                                                item,
                                                valoracion_1823,
                                                "valoracion_1823"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.valoracion_1823,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "valoracion_1823",
                                                $$v
                                              )
                                            },
                                            expression: "item.valoracion_1823"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(valoracion_3035) {
                                              return _vm.updateDe1A5(
                                                item,
                                                valoracion_3035,
                                                "valoracion_3035"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.valoracion_3035,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "valoracion_3035",
                                                $$v
                                              )
                                            },
                                            expression: "item.valoracion_3035"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(valoracion_4) {
                                              return _vm.updateDe1A5(
                                                item,
                                                valoracion_4,
                                                "valoracion_4"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.valoracion_4,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "valoracion_4",
                                                $$v
                                              )
                                            },
                                            expression: "item.valoracion_4"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pb,
                                            expression: "item.pb"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pb },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pb",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "pb"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pt,
                                            expression: "item.pt"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pt },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pt",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "pt"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.te,
                                            expression: "item.te"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.te },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "te",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "te"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(lenguaje) {
                                              return _vm.updateDe1A5(
                                                item,
                                                lenguaje,
                                                "lenguaje"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.lenguaje,
                                            callback: function($$v) {
                                              _vm.$set(item, "lenguaje", $$v)
                                            },
                                            expression: "item.lenguaje"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(motora) {
                                              return _vm.updateDe1A5(
                                                item,
                                                motora,
                                                "motora"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.motora,
                                            callback: function($$v) {
                                              _vm.$set(item, "motora", $$v)
                                            },
                                            expression: "item.motora"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conducta) {
                                              return _vm.updateDe1A5(
                                                item,
                                                conducta,
                                                "conducta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conducta,
                                            callback: function($$v) {
                                              _vm.$set(item, "conducta", $$v)
                                            },
                                            expression: "item.conducta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(visuales) {
                                              return _vm.updateDe1A5(
                                                item,
                                                visuales,
                                                "visuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.visuales,
                                            callback: function($$v) {
                                              _vm.$set(item, "visuales", $$v)
                                            },
                                            expression: "item.visuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(auditivos) {
                                              return _vm.updateDe1A5(
                                                item,
                                                auditivos,
                                                "auditivos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.auditivos,
                                            callback: function($$v) {
                                              _vm.$set(item, "auditivos", $$v)
                                            },
                                            expression: "item.auditivos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(caries) {
                                              return _vm.updateDe1A5(
                                                item,
                                                caries,
                                                "caries"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.caries,
                                            callback: function($$v) {
                                              _vm.$set(item, "caries", $$v)
                                            },
                                            expression: "item.caries"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nocepillado,
                                            expression: "item.nocepillado"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nocepillado },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nocepillado",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "nocepillado"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(consultaodon) {
                                              return _vm.updateDe1A5(
                                                item,
                                                consultaodon,
                                                "consultaodon"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.consultaodon,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "consultaodon",
                                                $$v
                                              )
                                            },
                                            expression: "item.consultaodon"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(carnet) {
                                              return _vm.updateDe1A5(
                                                item,
                                                carnet,
                                                "carnet"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.carnet,
                                            callback: function($$v) {
                                              _vm.$set(item, "carnet", $$v)
                                            },
                                            expression: "item.carnet"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            {
                                              attrs: { value: "DESACTUALIZADO" }
                                            },
                                            [_vm._v("DESACTUALIZADO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(bcg) {
                                              return _vm.updateDe1A5(
                                                item,
                                                bcg,
                                                "bcg"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.bcg,
                                            callback: function($$v) {
                                              _vm.$set(item, "bcg", $$v)
                                            },
                                            expression: "item.bcg"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(polio) {
                                              return _vm.updateDe1A5(
                                                item,
                                                polio,
                                                "polio"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.polio,
                                            callback: function($$v) {
                                              _vm.$set(item, "polio", $$v)
                                            },
                                            expression: "item.polio"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "R1" } },
                                            [_vm._v("R1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "R2" } },
                                            [_vm._v("R2")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(dpt) {
                                              return _vm.updateDe1A5(
                                                item,
                                                dpt,
                                                "dpt"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.dpt,
                                            callback: function($$v) {
                                              _vm.$set(item, "dpt", $$v)
                                            },
                                            expression: "item.dpt"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "R1" } },
                                            [_vm._v("R1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "R2" } },
                                            [_vm._v("R2")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(fiebrea) {
                                              return _vm.updateDe1A5(
                                                item,
                                                fiebrea,
                                                "fiebrea"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.fiebrea,
                                            callback: function($$v) {
                                              _vm.$set(item, "fiebrea", $$v)
                                            },
                                            expression: "item.fiebrea"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tripleviral) {
                                              return _vm.updateDe1A5(
                                                item,
                                                tripleviral,
                                                "tripleviral"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tripleviral,
                                            callback: function($$v) {
                                              _vm.$set(item, "tripleviral", $$v)
                                            },
                                            expression: "item.tripleviral"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.otras,
                                            expression: "item.otras"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.otras },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "otras",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe1A5(
                                                item,
                                                $event,
                                                "otras"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(desparacitado) {
                                              return _vm.updateDe1A5(
                                                item,
                                                desparacitado,
                                                "desparacitado"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.desparacitado,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "desparacitado",
                                                $$v
                                              )
                                            },
                                            expression: "item.desparacitado"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(maltrato) {
                                              return _vm.updateDe1A5(
                                                item,
                                                maltrato,
                                                "maltrato"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.maltrato,
                                            callback: function($$v) {
                                              _vm.$set(item, "maltrato", $$v)
                                            },
                                            expression: "item.maltrato"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(enfermedad) {
                                              return _vm.updateDe1A5(
                                                item,
                                                enfermedad,
                                                "enfermedad"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedad,
                                            callback: function($$v) {
                                              _vm.$set(item, "enfermedad", $$v)
                                            },
                                            expression: "item.enfermedad"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(medicamento) {
                                              return _vm.updateDe1A5(
                                                item,
                                                medicamento,
                                                "medicamento"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.medicamento,
                                            callback: function($$v) {
                                              _vm.$set(item, "medicamento", $$v)
                                            },
                                            expression: "item.medicamento"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(19),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(20),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De6A11, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cyc) {
                                              return _vm.updateDe6A11(
                                                item,
                                                cyc,
                                                "cyc"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cyc,
                                            callback: function($$v) {
                                              _vm.$set(item, "cyc", $$v)
                                            },
                                            expression: "item.cyc"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(atencion) {
                                              return _vm.updateDe6A11(
                                                item,
                                                atencion,
                                                "atencion"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.atencion,
                                            callback: function($$v) {
                                              _vm.$set(item, "atencion", $$v)
                                            },
                                            expression: "item.atencion"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pb,
                                            expression: "item.pb"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pb },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pb",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "pb"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pt,
                                            expression: "item.pt"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pt },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pt",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "pt"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.te,
                                            expression: "item.te"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.te },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "te",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "te"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conducta) {
                                              return _vm.updateDe6A11(
                                                item,
                                                conducta,
                                                "conducta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conducta,
                                            callback: function($$v) {
                                              _vm.$set(item, "conducta", $$v)
                                            },
                                            expression: "item.conducta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(visuales) {
                                              return _vm.updateDe6A11(
                                                item,
                                                visuales,
                                                "visuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.visuales,
                                            callback: function($$v) {
                                              _vm.$set(item, "visuales", $$v)
                                            },
                                            expression: "item.visuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(auditivos) {
                                              return _vm.updateDe6A11(
                                                item,
                                                auditivos,
                                                "auditivos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.auditivos,
                                            callback: function($$v) {
                                              _vm.$set(item, "auditivos", $$v)
                                            },
                                            expression: "item.auditivos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(dientes_sanos) {
                                              return _vm.updateDe6A11(
                                                item,
                                                dientes_sanos,
                                                "dientes_sanos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.dientes_sanos,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "dientes_sanos",
                                                $$v
                                              )
                                            },
                                            expression: "item.dientes_sanos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(consultaodon) {
                                              return _vm.updateDe6A11(
                                                item,
                                                consultaodon,
                                                "consultaodon"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.consultaodon,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "consultaodon",
                                                $$v
                                              )
                                            },
                                            expression: "item.consultaodon"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nofluor,
                                            expression: "item.nofluor"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nofluor },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nofluor",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "nofluor"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nocepillado,
                                            expression: "item.nocepillado"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nocepillado },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nocepillado",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe6A11(
                                                item,
                                                $event,
                                                "nocepillado"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(maltrato) {
                                              return _vm.updateDe6A11(
                                                item,
                                                maltrato,
                                                "maltrato"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.maltrato,
                                            callback: function($$v) {
                                              _vm.$set(item, "maltrato", $$v)
                                            },
                                            expression: "item.maltrato"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(sustanciaspsico) {
                                              return _vm.updateDe6A11(
                                                item,
                                                sustanciaspsico,
                                                "sustanciaspsico"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.sustanciaspsico,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "sustanciaspsico",
                                                $$v
                                              )
                                            },
                                            expression: "item.sustanciaspsico"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(desparacitado) {
                                              return _vm.updateDe6A11(
                                                item,
                                                desparacitado,
                                                "desparacitado"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.desparacitado,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "desparacitado",
                                                $$v
                                              )
                                            },
                                            expression: "item.desparacitado"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(enfermedad) {
                                              return _vm.updateDe6A11(
                                                item,
                                                enfermedad,
                                                "enfermedad"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedad,
                                            callback: function($$v) {
                                              _vm.$set(item, "enfermedad", $$v)
                                            },
                                            expression: "item.enfermedad"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(medicamento) {
                                              return _vm.updateDe6A11(
                                                item,
                                                medicamento,
                                                "medicamento"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.medicamento,
                                            callback: function($$v) {
                                              _vm.$set(item, "medicamento", $$v)
                                            },
                                            expression: "item.medicamento"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(padre) {
                                              return _vm.updateDe6A11(
                                                item,
                                                padre,
                                                "padre"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.padre,
                                            callback: function($$v) {
                                              _vm.$set(item, "padre", $$v)
                                            },
                                            expression: "item.padre"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(madre) {
                                              return _vm.updateDe6A11(
                                                item,
                                                madre,
                                                "madre"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.madre,
                                            callback: function($$v) {
                                              _vm.$set(item, "madre", $$v)
                                            },
                                            expression: "item.madre"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(hermanos) {
                                              return _vm.updateDe6A11(
                                                item,
                                                hermanos,
                                                "hermanos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.hermanos,
                                            callback: function($$v) {
                                              _vm.$set(item, "hermanos", $$v)
                                            },
                                            expression: "item.hermanos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conyuge) {
                                              return _vm.updateDe6A11(
                                                item,
                                                conyuge,
                                                "conyuge"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conyuge,
                                            callback: function($$v) {
                                              _vm.$set(item, "conyuge", $$v)
                                            },
                                            expression: "item.conyuge"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(21),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(22),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De10A59, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.primera_mes,
                                            expression: "item.primera_mes"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.primera_mes },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "primera_mes",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe10A59(
                                                item,
                                                $event,
                                                "primera_mes"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(flujo_vaginal) {
                                              return _vm.updateDe10A59(
                                                item,
                                                flujo_vaginal,
                                                "flujo_vaginal"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.flujo_vaginal,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "flujo_vaginal",
                                                $$v
                                              )
                                            },
                                            expression: "item.flujo_vaginal"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(flujo_uretral) {
                                              return _vm.updateDe10A59(
                                                item,
                                                flujo_uretral,
                                                "flujo_uretral"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.flujo_uretral,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "flujo_uretral",
                                                $$v
                                              )
                                            },
                                            expression: "item.flujo_uretral"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              relaciones_sexuales
                                            ) {
                                              return _vm.updateDe10A59(
                                                item,
                                                relaciones_sexuales,
                                                "relaciones_sexuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.relaciones_sexuales,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "relaciones_sexuales",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.relaciones_sexuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.compa_sexuales,
                                            expression: "item.compa_sexuales"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: {
                                          value: item.compa_sexuales
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "compa_sexuales",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe10A59(
                                                item,
                                                $event,
                                                "compa_sexuales"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(usa_condon) {
                                              return _vm.updateDe10A59(
                                                item,
                                                usa_condon,
                                                "usa_condon"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.usa_condon,
                                            callback: function($$v) {
                                              _vm.$set(item, "usa_condon", $$v)
                                            },
                                            expression: "item.usa_condon"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(abortos_seis) {
                                              return _vm.updateDe10A59(
                                                item,
                                                abortos_seis,
                                                "abortos_seis"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.abortos_seis,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "abortos_seis",
                                                $$v
                                              )
                                            },
                                            expression: "item.abortos_seis"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              embarazo_adolecentes
                                            ) {
                                              return _vm.updateDe10A59(
                                                item,
                                                embarazo_adolecentes,
                                                "embarazo_adolecentes"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.embarazo_adolecentes,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "embarazo_adolecentes",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.embarazo_adolecentes"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(metodo) {
                                              return _vm.updateDe10A59(
                                                item,
                                                metodo,
                                                "metodo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.metodo,
                                            callback: function($$v) {
                                              _vm.$set(item, "metodo", $$v)
                                            },
                                            expression: "item.metodo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Gestación")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("Sin compañero(a)")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [
                                              _vm._v(
                                                "Creencias religiosas y/o culturales"
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.tiempo_metodo,
                                            expression: "item.tiempo_metodo"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.tiempo_metodo },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tiempo_metodo",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe10A59(
                                                item,
                                                $event,
                                                "tiempo_metodo"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(controles) {
                                              return _vm.updateDe10A59(
                                                item,
                                                controles,
                                                "controles"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.controles,
                                            callback: function($$v) {
                                              _vm.$set(item, "controles", $$v)
                                            },
                                            expression: "item.controles"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(motivo) {
                                              return _vm.updateDe10A59(
                                                item,
                                                motivo,
                                                "motivo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.motivo,
                                            callback: function($$v) {
                                              _vm.$set(item, "motivo", $$v)
                                            },
                                            expression: "item.motivo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(citologia) {
                                              return _vm.updateDe10A59(
                                                item,
                                                citologia,
                                                "citologia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.citologia,
                                            callback: function($$v) {
                                              _vm.$set(item, "citologia", $$v)
                                            },
                                            expression: "item.citologia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(colposcopia) {
                                              return _vm.updateDe10A59(
                                                item,
                                                colposcopia,
                                                "colposcopia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.colposcopia,
                                            callback: function($$v) {
                                              _vm.$set(item, "colposcopia", $$v)
                                            },
                                            expression: "item.colposcopia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(examen_seno) {
                                              return _vm.updateDe10A59(
                                                item,
                                                examen_seno,
                                                "examen_seno"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.examen_seno,
                                            callback: function($$v) {
                                              _vm.$set(item, "examen_seno", $$v)
                                            },
                                            expression: "item.examen_seno"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(violencia) {
                                              return _vm.updateDe10A59(
                                                item,
                                                violencia,
                                                "violencia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.violencia,
                                            callback: function($$v) {
                                              _vm.$set(item, "violencia", $$v)
                                            },
                                            expression: "item.violencia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tdit) {
                                              return _vm.updateDe10A59(
                                                item,
                                                tdit,
                                                "tdit"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tdit,
                                            callback: function($$v) {
                                              _vm.$set(item, "tdit", $$v)
                                            },
                                            expression: "item.tdit"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "D1" } },
                                            [_vm._v("D1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D2" } },
                                            [_vm._v("D2")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D3" } },
                                            [_vm._v("D3")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D4" } },
                                            [_vm._v("D4")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D5" } },
                                            [_vm._v("D5")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tripleviral) {
                                              return _vm.updateDe10A59(
                                                item,
                                                tripleviral,
                                                "tripleviral"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tripleviral,
                                            callback: function($$v) {
                                              _vm.$set(item, "tripleviral", $$v)
                                            },
                                            expression: "item.tripleviral"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nacidos_vivos,
                                            expression: "item.nacidos_vivos"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nacidos_vivos },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nacidos_vivos",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe10A59(
                                                item,
                                                $event,
                                                "nacidos_vivos"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(abortos) {
                                              return _vm.updateDe10A59(
                                                item,
                                                abortos,
                                                "abortos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.abortos,
                                            callback: function($$v) {
                                              _vm.$set(item, "abortos", $$v)
                                            },
                                            expression: "item.abortos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(examen_prostata) {
                                              return _vm.updateDe10A59(
                                                item,
                                                examen_prostata,
                                                "examen_prostata"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.examen_prostata,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "examen_prostata",
                                                $$v
                                              )
                                            },
                                            expression: "item.examen_prostata"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(biposia_prostata) {
                                              return _vm.updateDe10A59(
                                                item,
                                                biposia_prostata,
                                                "biposia_prostata"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.biposia_prostata,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "biposia_prostata",
                                                $$v
                                              )
                                            },
                                            expression: "item.biposia_prostata"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(23),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(24),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.ParPost, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(aceptacion) {
                                              return _vm.updatePosparto(
                                                item,
                                                aceptacion,
                                                "aceptacion"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.aceptacion,
                                            callback: function($$v) {
                                              _vm.$set(item, "aceptacion", $$v)
                                            },
                                            expression: "item.aceptacion"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(control_prenatal) {
                                              return _vm.updatePosparto(
                                                item,
                                                control_prenatal,
                                                "control_prenatal"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.control_prenatal,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "control_prenatal",
                                                $$v
                                              )
                                            },
                                            expression: "item.control_prenatal"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(atencion_parto) {
                                              return _vm.updatePosparto(
                                                item,
                                                atencion_parto,
                                                "atencion_parto"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.atencion_parto,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "atencion_parto",
                                                $$v
                                              )
                                            },
                                            expression: "item.atencion_parto"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SICASA" } },
                                            [_vm._v("SI EN CASA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIHOSPITAL" } },
                                            [_vm._v("SI EN HOSPITAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(carnet) {
                                              return _vm.updatePosparto(
                                                item,
                                                carnet,
                                                "carnet"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.carnet,
                                            callback: function($$v) {
                                              _vm.$set(item, "carnet", $$v)
                                            },
                                            expression: "item.carnet"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.fecha_ultima,
                                            expression: "item.fecha_ultima"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        attrs: {
                                          id: "date",
                                          type: "date",
                                          pattern: "[0-9]{4}-[0-9]{2}-[0-9]{2}"
                                        },
                                        domProps: { value: item.fecha_ultima },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "fecha_ultima",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "fecha_ultima"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.fecha_probable,
                                            expression: "item.fecha_probable"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        attrs: {
                                          id: "date",
                                          type: "date",
                                          pattern: "[0-9]{4}-[0-9]{2}-[0-9]{2}"
                                        },
                                        domProps: {
                                          value: item.fecha_probable
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "fecha_probable",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "fecha_probable"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.semanas_ges,
                                            expression: "item.semanas_ges"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.semanas_ges },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "semanas_ges",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "semanas_ges"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(num_controles) {
                                              return _vm.updatePosparto(
                                                item,
                                                num_controles,
                                                "num_controles"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.num_controles,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "num_controles",
                                                $$v
                                              )
                                            },
                                            expression: "item.num_controles"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("2")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("3")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(vih) {
                                              return _vm.updatePosparto(
                                                item,
                                                vih,
                                                "vih"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.vih,
                                            callback: function($$v) {
                                              _vm.$set(item, "vih", $$v)
                                            },
                                            expression: "item.vih"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIP" } },
                                            [_vm._v("SI POSITIVO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NEGATIVO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(toxoplasma) {
                                              return _vm.updatePosparto(
                                                item,
                                                toxoplasma,
                                                "toxoplasma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.toxoplasma,
                                            callback: function($$v) {
                                              _vm.$set(item, "toxoplasma", $$v)
                                            },
                                            expression: "item.toxoplasma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(vdrl) {
                                              return _vm.updatePosparto(
                                                item,
                                                vdrl,
                                                "vdrl"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.vdrl,
                                            callback: function($$v) {
                                              _vm.$set(item, "vdrl", $$v)
                                            },
                                            expression: "item.vdrl"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIP" } },
                                            [_vm._v("SI POSITIVO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NEGATIVO")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(odontologia) {
                                              return _vm.updatePosparto(
                                                item,
                                                odontologia,
                                                "odontologia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.odontologia,
                                            callback: function($$v) {
                                              _vm.$set(item, "odontologia", $$v)
                                            },
                                            expression: "item.odontologia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(vacunaciontdit) {
                                              return _vm.updatePosparto(
                                                item,
                                                vacunaciontdit,
                                                "vacunaciontdit"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.vacunaciontdit,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "vacunaciontdit",
                                                $$v
                                              )
                                            },
                                            expression: "item.vacunaciontdit"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "D1" } },
                                            [_vm._v("D1")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D2" } },
                                            [_vm._v("D2")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D3" } },
                                            [_vm._v("D3")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D4" } },
                                            [_vm._v("D4")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "D5" } },
                                            [_vm._v("D5")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.fecha_ultimo_parto,
                                            expression:
                                              "item.fecha_ultimo_parto"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        attrs: {
                                          id: "date",
                                          type: "date",
                                          pattern: "[0-9]{4}-[0-9]{2}-[0-9]{2}"
                                        },
                                        domProps: {
                                          value: item.fecha_ultimo_parto
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "fecha_ultimo_parto",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdatePosparto(
                                                item,
                                                $event,
                                                "fecha_ultimo_parto"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(suplementacion) {
                                              return _vm.updatePosparto(
                                                item,
                                                suplementacion,
                                                "suplementacion"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.suplementacion,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "suplementacion",
                                                $$v
                                              )
                                            },
                                            expression: "item.suplementacion"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              enfermedades_cronicas
                                            ) {
                                              return _vm.updatePosparto(
                                                item,
                                                enfermedades_cronicas,
                                                "enfermedades_cronicas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedades_cronicas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "enfermedades_cronicas",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.enfermedades_cronicas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(sedentarismo) {
                                              return _vm.updatePosparto(
                                                item,
                                                sedentarismo,
                                                "sedentarismo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.sedentarismo,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "sedentarismo",
                                                $$v
                                              )
                                            },
                                            expression: "item.sedentarismo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(fuma) {
                                              return _vm.updatePosparto(
                                                item,
                                                fuma,
                                                "fuma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.fuma,
                                            callback: function($$v) {
                                              _vm.$set(item, "fuma", $$v)
                                            },
                                            expression: "item.fuma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(consumo) {
                                              return _vm.updatePosparto(
                                                item,
                                                consumo,
                                                "consumo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.consumo,
                                            callback: function($$v) {
                                              _vm.$set(item, "consumo", $$v)
                                            },
                                            expression: "item.consumo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(bebidas) {
                                              return _vm.updatePosparto(
                                                item,
                                                bebidas,
                                                "bebidas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.bebidas,
                                            callback: function($$v) {
                                              _vm.$set(item, "bebidas", $$v)
                                            },
                                            expression: "item.bebidas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tipo_parto) {
                                              return _vm.updatePosparto(
                                                item,
                                                tipo_parto,
                                                "tipo_parto"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tipo_parto,
                                            callback: function($$v) {
                                              _vm.$set(item, "tipo_parto", $$v)
                                            },
                                            expression: "item.tipo_parto"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "VAGINAL" } },
                                            [_vm._v("VAGINAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "CESAREA" } },
                                            [_vm._v("CESAREA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              atencion_institucional
                                            ) {
                                              return _vm.updatePosparto(
                                                item,
                                                atencion_institucional,
                                                "atencion_institucional"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.atencion_institucional,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "atencion_institucional",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.atencion_institucional"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cc18) {
                                              return _vm.updatePosparto(
                                                item,
                                                cc18,
                                                "cc18"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cc18,
                                            callback: function($$v) {
                                              _vm.$set(item, "cc18", $$v)
                                            },
                                            expression: "item.cc18"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(morgestacion) {
                                              return _vm.updatePosparto(
                                                item,
                                                morgestacion,
                                                "morgestacion"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.morgestacion,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "morgestacion",
                                                $$v
                                              )
                                            },
                                            expression: "item.morgestacion"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Aborto no especificado")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [
                                              _vm._v(
                                                "Hemorragia precoz del embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [
                                              _vm._v(
                                                "Hemorragia anteparto no especificada en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [
                                              _vm._v(
                                                "Hipertensión materna no especificada"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [
                                              _vm._v(
                                                "Vomitos excesivos en el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [
                                              _vm._v(
                                                "Atención de la madre por otras complicaciones principalmente relacionadas con el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "7" } },
                                            [
                                              _vm._v(
                                                "Diabetes mellitus en el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "8" } },
                                            [
                                              _vm._v(
                                                "Hallazgo anormal en el examen prenatal de la madre"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "9" } },
                                            [_vm._v("Parto unico espontáneo")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "10" } },
                                            [
                                              _vm._v(
                                                "Trabajo de parto y parto complicados por hemorragia intraparto no clasificada en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "11" } },
                                            [_vm._v("Hemorragia postparto")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "12" } },
                                            [_vm._v("Parto único por cesárea")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "13" } },
                                            [
                                              _vm._v(
                                                "Otras complicaciones del trabajo de parto y de partos no clasificadas en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "14" } },
                                            [
                                              _vm._v(
                                                "Otras complicaciones del puerperio no clasificada en otra parte"
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(morparto) {
                                              return _vm.updatePosparto(
                                                item,
                                                morparto,
                                                "morparto"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.morparto,
                                            callback: function($$v) {
                                              _vm.$set(item, "morparto", $$v)
                                            },
                                            expression: "item.morparto"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Aborto no especificado")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [
                                              _vm._v(
                                                "Hemorragia precoz del embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [
                                              _vm._v(
                                                "Hemorragia anteparto no especificada en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [
                                              _vm._v(
                                                "Hipertensión materna no especificada"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [
                                              _vm._v(
                                                "Vomitos excesivos en el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [
                                              _vm._v(
                                                "Atención de la madre por otras complicaciones principalmente relacionadas con el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "7" } },
                                            [
                                              _vm._v(
                                                "Diabetes mellitus en el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "8" } },
                                            [
                                              _vm._v(
                                                "Hallazgo anormal en el examen prenatal de la madre"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "9" } },
                                            [_vm._v("Parto unico espontáneo")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "10" } },
                                            [
                                              _vm._v(
                                                "Trabajo de parto y parto complicados por hemorragia intraparto no clasificada en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "11" } },
                                            [_vm._v("Hemorragia postparto")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "12" } },
                                            [_vm._v("Parto único por cesárea")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "13" } },
                                            [
                                              _vm._v(
                                                "Otras complicaciones del trabajo de parto y de partos no clasificadas en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "14" } },
                                            [
                                              _vm._v(
                                                "Otras complicaciones del puerperio no clasificada en otra parte"
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(morposparto) {
                                              return _vm.updatePosparto(
                                                item,
                                                morposparto,
                                                "morposparto"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.morposparto,
                                            callback: function($$v) {
                                              _vm.$set(item, "morposparto", $$v)
                                            },
                                            expression: "item.morposparto"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Aborto no especificado")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [
                                              _vm._v(
                                                "Hemorragia precoz del embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [
                                              _vm._v(
                                                "Hemorragia anteparto no especificada en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [
                                              _vm._v(
                                                "Hipertensión materna no especificada"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [
                                              _vm._v(
                                                "Vomitos excesivos en el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [
                                              _vm._v(
                                                "Atención de la madre por otras complicaciones principalmente relacionadas con el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "7" } },
                                            [
                                              _vm._v(
                                                "Diabetes mellitus en el embarazo"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "8" } },
                                            [
                                              _vm._v(
                                                "Hallazgo anormal en el examen prenatal de la madre"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "9" } },
                                            [_vm._v("Parto unico espontáneo")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "10" } },
                                            [
                                              _vm._v(
                                                "Trabajo de parto y parto complicados por hemorragia intraparto no clasificada en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "11" } },
                                            [_vm._v("Hemorragia postparto")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "12" } },
                                            [_vm._v("Parto único por cesárea")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "13" } },
                                            [
                                              _vm._v(
                                                "Otras complicaciones del trabajo de parto y de partos no clasificadas en otra parte"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "14" } },
                                            [
                                              _vm._v(
                                                "Otras complicaciones del puerperio no clasificada en otra parte"
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "adolescente", role: "tabpanel" }
                },
                [
                  _vm._m(25),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(26),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De12A17, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe12A17(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe12A17(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe12A17(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pb,
                                            expression: "item.pb"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pb },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pb",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe12A17(
                                                item,
                                                $event,
                                                "pb"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(visuales) {
                                              return _vm.updateDe12A17(
                                                item,
                                                visuales,
                                                "visuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.visuales,
                                            callback: function($$v) {
                                              _vm.$set(item, "visuales", $$v)
                                            },
                                            expression: "item.visuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(auditivos) {
                                              return _vm.updateDe12A17(
                                                item,
                                                auditivos,
                                                "auditivos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.auditivos,
                                            callback: function($$v) {
                                              _vm.$set(item, "auditivos", $$v)
                                            },
                                            expression: "item.auditivos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conducta) {
                                              return _vm.updateDe12A17(
                                                item,
                                                conducta,
                                                "conducta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conducta,
                                            callback: function($$v) {
                                              _vm.$set(item, "conducta", $$v)
                                            },
                                            expression: "item.conducta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              enfermedades_cronicas
                                            ) {
                                              return _vm.updateDe12A17(
                                                item,
                                                enfermedades_cronicas,
                                                "enfermedades_cronicas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedades_cronicas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "enfermedades_cronicas",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.enfermedades_cronicas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(dientes_sanos) {
                                              return _vm.updateDe12A17(
                                                item,
                                                dientes_sanos,
                                                "dientes_sanos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.dientes_sanos,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "dientes_sanos",
                                                $$v
                                              )
                                            },
                                            expression: "item.dientes_sanos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(consultaodon) {
                                              return _vm.updateDe12A17(
                                                item,
                                                consultaodon,
                                                "consultaodon"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.consultaodon,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "consultaodon",
                                                $$v
                                              )
                                            },
                                            expression: "item.consultaodon"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nocepillado,
                                            expression: "item.nocepillado"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nocepillado },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nocepillado",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe12A17(
                                                item,
                                                $event,
                                                "nocepillado"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(maltrato) {
                                              return _vm.updateDe12A17(
                                                item,
                                                maltrato,
                                                "maltrato"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.maltrato,
                                            callback: function($$v) {
                                              _vm.$set(item, "maltrato", $$v)
                                            },
                                            expression: "item.maltrato"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(alcohol) {
                                              return _vm.updateDe12A17(
                                                item,
                                                alcohol,
                                                "alcohol"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.alcohol,
                                            callback: function($$v) {
                                              _vm.$set(item, "alcohol", $$v)
                                            },
                                            expression: "item.alcohol"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(fuma) {
                                              return _vm.updateDe12A17(
                                                item,
                                                fuma,
                                                "fuma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.fuma,
                                            callback: function($$v) {
                                              _vm.$set(item, "fuma", $$v)
                                            },
                                            expression: "item.fuma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(spa) {
                                              return _vm.updateDe12A17(
                                                item,
                                                spa,
                                                "spa"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.spa,
                                            callback: function($$v) {
                                              _vm.$set(item, "spa", $$v)
                                            },
                                            expression: "item.spa"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(desparacitado) {
                                              return _vm.updateDe12A17(
                                                item,
                                                desparacitado,
                                                "desparacitado"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.desparacitado,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "desparacitado",
                                                $$v
                                              )
                                            },
                                            expression: "item.desparacitado"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(empleo) {
                                              return _vm.updateDe12A17(
                                                item,
                                                empleo,
                                                "empleo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.empleo,
                                            callback: function($$v) {
                                              _vm.$set(item, "empleo", $$v)
                                            },
                                            expression: "item.empleo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.religion,
                                            expression: "item.religion"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.religion },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "religion",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe12A17(
                                                item,
                                                $event,
                                                "religion"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queesvih) {
                                              return _vm.updateDe12A17(
                                                item,
                                                queesvih,
                                                "queesvih"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queesvih,
                                            callback: function($$v) {
                                              _vm.$set(item, "queesvih", $$v)
                                            },
                                            expression: "item.queesvih"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queescancerutero) {
                                              return _vm.updateDe12A17(
                                                item,
                                                queescancerutero,
                                                "queescancerutero"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queescancerutero,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queescancerutero",
                                                $$v
                                              )
                                            },
                                            expression: "item.queescancerutero"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queespapiloma) {
                                              return _vm.updateDe12A17(
                                                item,
                                                queespapiloma,
                                                "queespapiloma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queespapiloma,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queespapiloma",
                                                $$v
                                              )
                                            },
                                            expression: "item.queespapiloma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queescancerseno) {
                                              return _vm.updateDe12A17(
                                                item,
                                                queescancerseno,
                                                "queescancerseno"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queescancerseno,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queescancerseno",
                                                $$v
                                              )
                                            },
                                            expression: "item.queescancerseno"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(padre) {
                                              return _vm.updateDe12A17(
                                                item,
                                                padre,
                                                "padre"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.padre,
                                            callback: function($$v) {
                                              _vm.$set(item, "padre", $$v)
                                            },
                                            expression: "item.padre"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(madre) {
                                              return _vm.updateDe12A17(
                                                item,
                                                madre,
                                                "madre"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.madre,
                                            callback: function($$v) {
                                              _vm.$set(item, "madre", $$v)
                                            },
                                            expression: "item.madre"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(hermanos) {
                                              return _vm.updateDe12A17(
                                                item,
                                                hermanos,
                                                "hermanos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.hermanos,
                                            callback: function($$v) {
                                              _vm.$set(item, "hermanos", $$v)
                                            },
                                            expression: "item.hermanos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conyuge) {
                                              return _vm.updateDe12A17(
                                                item,
                                                conyuge,
                                                "conyuge"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conyuge,
                                            callback: function($$v) {
                                              _vm.$set(item, "conyuge", $$v)
                                            },
                                            expression: "item.conyuge"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("MUY BUENA")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("REGULAR")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("MALA")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(27),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(28),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De18A28, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pcintura,
                                            expression: "item.pcintura"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pcintura },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pcintura",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "pcintura"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pb,
                                            expression: "item.pb"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pb },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pb",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "pb"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(visuales) {
                                              return _vm.updateDe18A28(
                                                item,
                                                visuales,
                                                "visuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.visuales,
                                            callback: function($$v) {
                                              _vm.$set(item, "visuales", $$v)
                                            },
                                            expression: "item.visuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(auditivos) {
                                              return _vm.updateDe18A28(
                                                item,
                                                auditivos,
                                                "auditivos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.auditivos,
                                            callback: function($$v) {
                                              _vm.$set(item, "auditivos", $$v)
                                            },
                                            expression: "item.auditivos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conducta) {
                                              return _vm.updateDe18A28(
                                                item,
                                                conducta,
                                                "conducta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conducta,
                                            callback: function($$v) {
                                              _vm.$set(item, "conducta", $$v)
                                            },
                                            expression: "item.conducta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              enfermedades_cronicas
                                            ) {
                                              return _vm.updateDe18A28(
                                                item,
                                                enfermedades_cronicas,
                                                "enfermedades_cronicas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedades_cronicas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "enfermedades_cronicas",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.enfermedades_cronicas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(dientes_sanos) {
                                              return _vm.updateDe18A28(
                                                item,
                                                dientes_sanos,
                                                "dientes_sanos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.dientes_sanos,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "dientes_sanos",
                                                $$v
                                              )
                                            },
                                            expression: "item.dientes_sanos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(consultaodon) {
                                              return _vm.updateDe18A28(
                                                item,
                                                consultaodon,
                                                "consultaodon"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.consultaodon,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "consultaodon",
                                                $$v
                                              )
                                            },
                                            expression: "item.consultaodon"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nocepillado,
                                            expression: "item.nocepillado"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nocepillado },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nocepillado",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "nocepillado"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(maltrato) {
                                              return _vm.updateDe18A28(
                                                item,
                                                maltrato,
                                                "maltrato"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.maltrato,
                                            callback: function($$v) {
                                              _vm.$set(item, "maltrato", $$v)
                                            },
                                            expression: "item.maltrato"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(alcohol) {
                                              return _vm.updateDe18A28(
                                                item,
                                                alcohol,
                                                "alcohol"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.alcohol,
                                            callback: function($$v) {
                                              _vm.$set(item, "alcohol", $$v)
                                            },
                                            expression: "item.alcohol"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(fuma) {
                                              return _vm.updateDe18A28(
                                                item,
                                                fuma,
                                                "fuma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.fuma,
                                            callback: function($$v) {
                                              _vm.$set(item, "fuma", $$v)
                                            },
                                            expression: "item.fuma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(spa) {
                                              return _vm.updateDe18A28(
                                                item,
                                                spa,
                                                "spa"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.spa,
                                            callback: function($$v) {
                                              _vm.$set(item, "spa", $$v)
                                            },
                                            expression: "item.spa"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(desparacitado) {
                                              return _vm.updateDe18A28(
                                                item,
                                                desparacitado,
                                                "desparacitado"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.desparacitado,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "desparacitado",
                                                $$v
                                              )
                                            },
                                            expression: "item.desparacitado"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(empleo) {
                                              return _vm.updateDe18A28(
                                                item,
                                                empleo,
                                                "empleo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.empleo,
                                            callback: function($$v) {
                                              _vm.$set(item, "empleo", $$v)
                                            },
                                            expression: "item.empleo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.religion,
                                            expression: "item.religion"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.religion },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "religion",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe18A28(
                                                item,
                                                $event,
                                                "religion"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queesvih) {
                                              return _vm.updateDe18A28(
                                                item,
                                                queesvih,
                                                "queesvih"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queesvih,
                                            callback: function($$v) {
                                              _vm.$set(item, "queesvih", $$v)
                                            },
                                            expression: "item.queesvih"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queescancerutero) {
                                              return _vm.updateDe18A28(
                                                item,
                                                queescancerutero,
                                                "queescancerutero"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queescancerutero,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queescancerutero",
                                                $$v
                                              )
                                            },
                                            expression: "item.queescancerutero"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queespapiloma) {
                                              return _vm.updateDe18A28(
                                                item,
                                                queespapiloma,
                                                "queespapiloma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queespapiloma,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queespapiloma",
                                                $$v
                                              )
                                            },
                                            expression: "item.queespapiloma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(29),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(30),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De29A59, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pcintura,
                                            expression: "item.pcintura"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pcintura },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pcintura",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "pcintura"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pb,
                                            expression: "item.pb"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pb },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pb",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "pb"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(visuales) {
                                              return _vm.updateDe29A59(
                                                item,
                                                visuales,
                                                "visuales"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.visuales,
                                            callback: function($$v) {
                                              _vm.$set(item, "visuales", $$v)
                                            },
                                            expression: "item.visuales"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(auditivos) {
                                              return _vm.updateDe29A59(
                                                item,
                                                auditivos,
                                                "auditivos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.auditivos,
                                            callback: function($$v) {
                                              _vm.$set(item, "auditivos", $$v)
                                            },
                                            expression: "item.auditivos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(conducta) {
                                              return _vm.updateDe29A59(
                                                item,
                                                conducta,
                                                "conducta"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.conducta,
                                            callback: function($$v) {
                                              _vm.$set(item, "conducta", $$v)
                                            },
                                            expression: "item.conducta"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              enfermedades_cronicas
                                            ) {
                                              return _vm.updateDe29A59(
                                                item,
                                                enfermedades_cronicas,
                                                "enfermedades_cronicas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedades_cronicas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "enfermedades_cronicas",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.enfermedades_cronicas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(dientes_sanos) {
                                              return _vm.updateDe29A59(
                                                item,
                                                dientes_sanos,
                                                "dientes_sanos"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.dientes_sanos,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "dientes_sanos",
                                                $$v
                                              )
                                            },
                                            expression: "item.dientes_sanos"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(consultaodon) {
                                              return _vm.updateDe29A59(
                                                item,
                                                consultaodon,
                                                "consultaodon"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.consultaodon,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "consultaodon",
                                                $$v
                                              )
                                            },
                                            expression: "item.consultaodon"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.nocepillado,
                                            expression: "item.nocepillado"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.nocepillado },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "nocepillado",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "nocepillado"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(maltrato) {
                                              return _vm.updateDe29A59(
                                                item,
                                                maltrato,
                                                "maltrato"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.maltrato,
                                            callback: function($$v) {
                                              _vm.$set(item, "maltrato", $$v)
                                            },
                                            expression: "item.maltrato"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(alcohol) {
                                              return _vm.updateDe29A59(
                                                item,
                                                alcohol,
                                                "alcohol"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.alcohol,
                                            callback: function($$v) {
                                              _vm.$set(item, "alcohol", $$v)
                                            },
                                            expression: "item.alcohol"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(fuma) {
                                              return _vm.updateDe29A59(
                                                item,
                                                fuma,
                                                "fuma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.fuma,
                                            callback: function($$v) {
                                              _vm.$set(item, "fuma", $$v)
                                            },
                                            expression: "item.fuma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(spa) {
                                              return _vm.updateDe29A59(
                                                item,
                                                spa,
                                                "spa"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.spa,
                                            callback: function($$v) {
                                              _vm.$set(item, "spa", $$v)
                                            },
                                            expression: "item.spa"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(desparacitado) {
                                              return _vm.updateDe29A59(
                                                item,
                                                desparacitado,
                                                "desparacitado"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.desparacitado,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "desparacitado",
                                                $$v
                                              )
                                            },
                                            expression: "item.desparacitado"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(empleo) {
                                              return _vm.updateDe29A59(
                                                item,
                                                empleo,
                                                "empleo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.empleo,
                                            callback: function($$v) {
                                              _vm.$set(item, "empleo", $$v)
                                            },
                                            expression: "item.empleo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(examen_prostata) {
                                              return _vm.updateDe29A59(
                                                item,
                                                examen_prostata,
                                                "examen_prostata"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.examen_prostata,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "examen_prostata",
                                                $$v
                                              )
                                            },
                                            expression: "item.examen_prostata"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(citologia) {
                                              return _vm.updateDe29A59(
                                                item,
                                                citologia,
                                                "citologia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.citologia,
                                            callback: function($$v) {
                                              _vm.$set(item, "citologia", $$v)
                                            },
                                            expression: "item.citologia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(examen_mama) {
                                              return _vm.updateDe29A59(
                                                item,
                                                examen_mama,
                                                "examen_mama"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.examen_mama,
                                            callback: function($$v) {
                                              _vm.$set(item, "examen_mama", $$v)
                                            },
                                            expression: "item.examen_mama"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.religion,
                                            expression: "item.religion"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.religion },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "religion",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe29A59(
                                                item,
                                                $event,
                                                "religion"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queesvih) {
                                              return _vm.updateDe29A59(
                                                item,
                                                queesvih,
                                                "queesvih"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queesvih,
                                            callback: function($$v) {
                                              _vm.$set(item, "queesvih", $$v)
                                            },
                                            expression: "item.queesvih"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queescancerutero) {
                                              return _vm.updateDe29A59(
                                                item,
                                                queescancerutero,
                                                "queescancerutero"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queescancerutero,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queescancerutero",
                                                $$v
                                              )
                                            },
                                            expression: "item.queescancerutero"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(queespapiloma) {
                                              return _vm.updateDe29A59(
                                                item,
                                                queespapiloma,
                                                "queespapiloma"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.queespapiloma,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "queespapiloma",
                                                $$v
                                              )
                                            },
                                            expression: "item.queespapiloma"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "adultomayor", role: "tabpanel" }
                },
                [
                  _vm._m(31),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(32),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De60, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(grupo_ayudas) {
                                              return _vm.updateDe60(
                                                item,
                                                grupo_ayudas,
                                                "grupo_ayudas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.grupo_ayudas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "grupo_ayudas",
                                                $$v
                                              )
                                            },
                                            expression: "item.grupo_ayudas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Club de diabeticos")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("Ex fumadores")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("Vih/sida")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("Club de hipertensos")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [_vm._v("Ex alcoholicos")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [_vm._v("De adultos mayores")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.peso,
                                            expression: "item.peso"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.peso },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe60(
                                                item,
                                                $event,
                                                "peso"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.talla,
                                            expression: "item.talla"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.talla },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe60(
                                                item,
                                                $event,
                                                "talla"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.imc,
                                            expression: "item.imc"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.imc },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "imc",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe60(
                                                item,
                                                $event,
                                                "imc"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pa,
                                            expression: "item.pa"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pa },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pa",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe60(
                                                item,
                                                $event,
                                                "pa"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.glicemia,
                                            expression: "item.glicemia"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.glicemia },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "glicemia",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateDe60(
                                                item,
                                                $event,
                                                "glicemia"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cigarrillo) {
                                              return _vm.updateDe60(
                                                item,
                                                cigarrillo,
                                                "cigarrillo"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cigarrillo,
                                            callback: function($$v) {
                                              _vm.$set(item, "cigarrillo", $$v)
                                            },
                                            expression: "item.cigarrillo"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(alcohol) {
                                              return _vm.updateDe60(
                                                item,
                                                alcohol,
                                                "alcohol"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.alcohol,
                                            callback: function($$v) {
                                              _vm.$set(item, "alcohol", $$v)
                                            },
                                            expression: "item.alcohol"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(actividad_fisica) {
                                              return _vm.updateDe60(
                                                item,
                                                actividad_fisica,
                                                "actividad_fisica"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.actividad_fisica,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "actividad_fisica",
                                                $$v
                                              )
                                            },
                                            expression: "item.actividad_fisica"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(sintomatico) {
                                              return _vm.updateDe60(
                                                item,
                                                sintomatico,
                                                "sintomatico"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.sintomatico,
                                            callback: function($$v) {
                                              _vm.$set(item, "sintomatico", $$v)
                                            },
                                            expression: "item.sintomatico"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(examen_seno) {
                                              return _vm.updateDe60(
                                                item,
                                                examen_seno,
                                                "examen_seno"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.examen_seno,
                                            callback: function($$v) {
                                              _vm.$set(item, "examen_seno", $$v)
                                            },
                                            expression: "item.examen_seno"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(citologia) {
                                              return _vm.updateDe60(
                                                item,
                                                citologia,
                                                "citologia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.citologia,
                                            callback: function($$v) {
                                              _vm.$set(item, "citologia", $$v)
                                            },
                                            expression: "item.citologia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(colposcopia) {
                                              return _vm.updateDe60(
                                                item,
                                                colposcopia,
                                                "colposcopia"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.colposcopia,
                                            callback: function($$v) {
                                              _vm.$set(item, "colposcopia", $$v)
                                            },
                                            expression: "item.colposcopia"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(examen_prostata) {
                                              return _vm.updateDe60(
                                                item,
                                                examen_prostata,
                                                "examen_prostata"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.examen_prostata,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "examen_prostata",
                                                $$v
                                              )
                                            },
                                            expression: "item.examen_prostata"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(biposia_prostata) {
                                              return _vm.updateDe60(
                                                item,
                                                biposia_prostata,
                                                "biposia_prostata"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.biposia_prostata,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "biposia_prostata",
                                                $$v
                                              )
                                            },
                                            expression: "item.biposia_prostata"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(agudeza_visual) {
                                              return _vm.updateDe60(
                                                item,
                                                agudeza_visual,
                                                "agudeza_visual"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.agudeza_visual,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "agudeza_visual",
                                                $$v
                                              )
                                            },
                                            expression: "item.agudeza_visual"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SIN" } },
                                            [_vm._v("SI NORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "SIA" } },
                                            [_vm._v("SI ANORMAL")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(subsidio) {
                                              return _vm.updateDe60(
                                                item,
                                                subsidio,
                                                "subsidio"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.subsidio,
                                            callback: function($$v) {
                                              _vm.$set(item, "subsidio", $$v)
                                            },
                                            expression: "item.subsidio"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              enfermedades_cronicas
                                            ) {
                                              return _vm.updateDe60(
                                                item,
                                                enfermedades_cronicas,
                                                "enfermedades_cronicas"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedades_cronicas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "enfermedades_cronicas",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.enfermedades_cronicas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(
                                              enfermedades_infecciosas
                                            ) {
                                              return _vm.updateDe60(
                                                item,
                                                enfermedades_infecciosas,
                                                "enfermedades_infecciosas"
                                              )
                                            }
                                          },
                                          model: {
                                            value:
                                              item.enfermedades_infecciosas,
                                            callback: function($$v) {
                                              _vm.$set(
                                                item,
                                                "enfermedades_infecciosas",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "item.enfermedades_infecciosas"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(33),
                  _vm._v(" "),
                  _vm._m(34),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(35),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.EnCro, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(enfermedad) {
                                              return _vm.updateEnCro(
                                                item,
                                                enfermedad,
                                                "enfermedad"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedad,
                                            callback: function($$v) {
                                              _vm.$set(item, "enfermedad", $$v)
                                            },
                                            expression: "item.enfermedad"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Hipertensión")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("Diabetes")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("Cancer")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [
                                              _vm._v(
                                                "Enfermedades Cardiovasculares"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [_vm._v("Insuficiencia renal")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [_vm._v("Artritis")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "7" } },
                                            [_vm._v("Artrosis")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "8" } },
                                            [
                                              _vm._v(
                                                "Enfermedades psiquiatricas"
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.tiempo,
                                            expression: "item.tiempo"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.tiempo },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tiempo",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateEnCro(
                                                item,
                                                $event,
                                                "tiempo"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tratamiento) {
                                              return _vm.updateEnCro(
                                                item,
                                                tratamiento,
                                                "tratamiento"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tratamiento,
                                            callback: function($$v) {
                                              _vm.$set(item, "tratamiento", $$v)
                                            },
                                            expression: "item.tratamiento"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.complicaciones,
                                            expression: "item.complicaciones"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: {
                                          value: item.complicaciones
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "complicaciones",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateEnCro(
                                                item,
                                                $event,
                                                "complicaciones"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(36),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(37),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.EnInf, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(enfermedad) {
                                              return _vm.updateEnInf(
                                                item,
                                                enfermedad,
                                                "enfermedad"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.enfermedad,
                                            callback: function($$v) {
                                              _vm.$set(item, "enfermedad", $$v)
                                            },
                                            expression: "item.enfermedad"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Hipertensión")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("Diabetes")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("Cancer")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [
                                              _vm._v(
                                                "Enfermedades Cardiovasculares"
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [_vm._v("Insuficiencia renal")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [_vm._v("Artritis")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "7" } },
                                            [_vm._v("Artrosis")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "8" } },
                                            [
                                              _vm._v(
                                                "Enfermedades psiquiatricas"
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.tiempo,
                                            expression: "item.tiempo"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.tiempo },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tiempo",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateEnInf(
                                                item,
                                                $event,
                                                "tiempo"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(tratamiento) {
                                              return _vm.updateEnInf(
                                                item,
                                                tratamiento,
                                                "tratamiento"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.tratamiento,
                                            callback: function($$v) {
                                              _vm.$set(item, "tratamiento", $$v)
                                            },
                                            expression: "item.tratamiento"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.complicaciones,
                                            expression: "item.complicaciones"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: {
                                          value: item.complicaciones
                                        },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "complicaciones",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateEnInf(
                                                item,
                                                $event,
                                                "complicaciones"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(38),
                  _vm._v(" "),
                  _vm._m(39)
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "migrante", role: "tabpanel" }
                },
                [
                  _vm._m(40),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(41),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.Migra, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: index + 1 }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "200px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.tipo_id +
                                            " : " +
                                            item.identificacion
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "300px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: {
                                          value:
                                            item.pnom +
                                            " " +
                                            item.snom +
                                            " " +
                                            item.pape +
                                            " " +
                                            item.sape
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "150px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.sexo }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: {
                                          width: "100px",
                                          "background-color": "white"
                                        },
                                        attrs: { type: "text", readonly: "" },
                                        domProps: { value: item.edad }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.pais,
                                            expression: "item.pais"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.pais },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pais",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMigra(
                                                item,
                                                $event,
                                                "pais"
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(registrado) {
                                              return _vm.updateMigra(
                                                item,
                                                registrado,
                                                "registrado"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.registrado,
                                            callback: function($$v) {
                                              _vm.$set(item, "registrado", $$v)
                                            },
                                            expression: "item.registrado"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(cuantollego) {
                                              return _vm.updateMigra(
                                                item,
                                                cuantollego,
                                                "cuantollego"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.cuantollego,
                                            callback: function($$v) {
                                              _vm.$set(item, "cuantollego", $$v)
                                            },
                                            expression: "item.cuantollego"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Menos de 3 meses")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("6 meses a 12 meses ")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("12 meses a 24 meses")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("Más de 24 meses ")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(futuro) {
                                              return _vm.updateMigra(
                                                item,
                                                futuro,
                                                "futuro"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.futuro,
                                            callback: function($$v) {
                                              _vm.$set(item, "futuro", $$v)
                                            },
                                            expression: "item.futuro"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [
                                              _vm._v(
                                                "Volver al Pais de Origen "
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("Radicarse en este pais ")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("Irse a otro Pais")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(recibido) {
                                              return _vm.updateMigra(
                                                item,
                                                recibido,
                                                "recibido"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.recibido,
                                            callback: function($$v) {
                                              _vm.$set(item, "recibido", $$v)
                                            },
                                            expression: "item.recibido"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "SI" } },
                                            [_vm._v("SI")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "NO" } },
                                            [_vm._v("NO")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(necesidad) {
                                              return _vm.updateMigra(
                                                item,
                                                necesidad,
                                                "necesidad"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.necesidad,
                                            callback: function($$v) {
                                              _vm.$set(item, "necesidad", $$v)
                                            },
                                            expression: "item.necesidad"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("Hospedaje ")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("Alimentación ")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("Transporte ")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "4" } },
                                            [_vm._v("Salud")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "5" } },
                                            [_vm._v("Trabajo")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "6" } },
                                            [_vm._v("Ropa")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: item.dependen,
                                            expression: "item.dependen"
                                          }
                                        ],
                                        staticClass:
                                          "form-control text-capitalize",
                                        staticStyle: { width: "150px" },
                                        attrs: { type: "text" },
                                        domProps: { value: item.dependen },
                                        on: {
                                          input: [
                                            function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "dependen",
                                                $event.target.value
                                              )
                                            },
                                            function($event) {
                                              return _vm.changeupdateMigra(
                                                item,
                                                $event,
                                                "dependen",
                                                index
                                              )
                                            }
                                          ]
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "b-form-select",
                                        {
                                          staticStyle: { width: "150px" },
                                          on: {
                                            input: function(ingreso) {
                                              return _vm.updateMigra(
                                                item,
                                                ingreso,
                                                "ingreso"
                                              )
                                            }
                                          },
                                          model: {
                                            value: item.ingreso,
                                            callback: function($$v) {
                                              _vm.$set(item, "ingreso", $$v)
                                            },
                                            expression: "item.ingreso"
                                          }
                                        },
                                        [
                                          _c(
                                            "option",
                                            { attrs: { value: "1" } },
                                            [_vm._v("menos de 500.000")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "2" } },
                                            [_vm._v("500.000 a 800.0000")]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "option",
                                            { attrs: { value: "3" } },
                                            [_vm._v("mas de 800.000")]
                                          )
                                        ]
                                      )
                                    ],
                                    1
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              )
            ])
          ])
        ]
      )
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "kt-portlet__head-label" }, [
      _c("h3", { staticClass: "kt-portlet__head-title" }, [
        _c("span", { staticClass: "kt-widget20__number kt-font-danger" }, [
          _vm._v("CARACTERIZACIÓN")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "ul",
      {
        staticClass:
          "nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-success",
        attrs: { role: "tablist" }
      },
      [
        _c("li", { staticClass: "nav-item" }, [
          _c(
            "a",
            {
              staticClass: "nav-link active",
              attrs: {
                "data-toggle": "tab",
                href: "#tabIdentificacion",
                role: "tab"
              }
            },
            [_vm._v("Identificación")]
          )
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "nav-item" }, [
          _c(
            "a",
            {
              staticClass: "nav-link",
              attrs: { "data-toggle": "tab", href: "#tabVivienda", role: "tab" }
            },
            [_vm._v("Viviendas")]
          )
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "nav-item" }, [
          _c(
            "a",
            {
              staticClass: "nav-link",
              attrs: { "data-toggle": "tab", href: "#cartxciclo", role: "tab" }
            },
            [_vm._v("Cart. X ciclo")]
          )
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "nav-item" }, [
          _c(
            "a",
            {
              staticClass: "nav-link",
              attrs: { "data-toggle": "tab", href: "#adolescente", role: "tab" }
            },
            [_vm._v("Adolecentes/Jovenes")]
          )
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "nav-item" }, [
          _c(
            "a",
            {
              staticClass: "nav-link",
              attrs: { "data-toggle": "tab", href: "#adultomayor", role: "tab" }
            },
            [_vm._v("Adulto mayor")]
          )
        ]),
        _vm._v(" "),
        _c("li", { staticClass: "nav-item" }, [
          _c(
            "a",
            {
              staticClass: "nav-link",
              attrs: { "data-toggle": "tab", href: "#migrante", role: "tab" }
            },
            [_vm._v("Migrante")]
          )
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("A.Ficha Del Hogar")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "15px" }
        },
        [_vm._v("Jefe del Hogar")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Parentesco")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nacimiento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Telefono")]),
        _vm._v(" "),
        _c("th", [_vm._v("Estado Civil")]),
        _vm._v(" "),
        _c("th", [_vm._v("Ocupación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Etnia")]),
        _vm._v(" "),
        _c("th", [_vm._v("Clasificacion")]),
        _vm._v(" "),
        _c("td", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("B.Integrantes de la familia")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Parentesco")]),
        _vm._v(" "),
        _c("th", [_vm._v("Discapacidad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Escolaridad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Ocupación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Etnia")]),
        _vm._v(" "),
        _c("th", [_vm._v("Colegio")]),
        _vm._v(" "),
        _c("th", [_vm._v("Grado")]),
        _vm._v(" "),
        _c("td", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Vivienda")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Observe si cerca de la vivienda hay")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Animales dentro de la Vivienda")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Animal")]),
        _vm._v(" "),
        _c("th", [_vm._v("Cuantos")]),
        _vm._v(" "),
        _c("th", [_vm._v("Vacunado")]),
        _vm._v(" "),
        _c("td", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("La vivienda Tiene los Siguientes Ambientes Separados")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Observe Si Hay")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [
          _vm._v(
            "Almacena Junto A Los Alimentos Y/O Agua De Consumo Alguno De Los Siguientes Productos"
          )
        ]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("IV CARACTERIZACIÓN POR CICLO VITAL")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("A. PRIMERA INFANCIA NIÑOS(AS) MENORES DE UN AÑO")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "25" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "8" }
          },
          [_vm._v("Vacunación")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "9" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración Integral")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "8" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración del Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "8" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-success" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Lugar de Nacimiento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Hemoclasificación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Complicaciones en el parto")]),
        _vm._v(" "),
        _c("th", [_vm._v("Via de Parto")]),
        _vm._v(" "),
        _c("th", [_vm._v("Control de CyC")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("2-3 meses")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("6-8 meses")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("9-11 meses")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Lactancia Exclusiva")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Peso al Nacer (Kgs)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Peso Actual (Kgs)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Longitud al Nacer (cm)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Longitud Actual (cm)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Peso/Longitud")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Cinta")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Edemas")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-info" }, [_vm._v("Lenguaje")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-info" }, [_vm._v("Motora")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-info" }, [_vm._v("Conducta")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Carnet (PAI)")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("BCG")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("HEP-B")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("POLIO")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("PENTAVALENTE")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Maltrato")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Morbilidad")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("TSH")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("B.PRIMERA INFANCIA NIÑOS(AS) DE 1 A 5 AÑOS (12 a 60 Meses)")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "21" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "7" }
          },
          [_vm._v("Vacunación")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "7" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración Integral")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "6" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración del Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "7" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-primary" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Beneficiario de un Programa")]),
        _vm._v(" "),
        _c("td", [_vm._v("Control de CyC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("18-23 meses")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("30-35 meses")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("4 años")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(cm)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P.B")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P/T")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("T/E")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Lenguaje")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Motora")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Caries")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Carnet (PAI)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("BCG")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("POLIO")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("DPT")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Fiebre Amarilla")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Triple Viral")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Otras")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Desparacitado")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Enfermedad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Medicamento")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("C.INFANCIA NIÑOS(AS) DE 6 A 11 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "16" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Relación Familiar")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "7" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "6" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-primary" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Control de CyC")]),
        _vm._v(" "),
        _c("td", [_vm._v("Atencion Por")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(cm)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC/E")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P.B")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P/T")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("T/E")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Dientes Sanos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Aplicacion Fluor")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Señales Maltrato ó Abuso")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Sustancias Psicoactivas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Desparacitado")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Enfermedad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Medicamento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Padre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Madre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Hermanos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Conyugue")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("D.SALUD SEXUAL Y REPRODUCTIVA DE 10 A 59 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "17" }
          },
          [_vm._v("Planificación Familiar(Hombres y Mujeres de 10 a 59 años)")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "8" }
          },
          [_vm._v("Mujer")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Hombre")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "13" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Planifica")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "1" }
          },
          [_vm._v("No Planifica")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Vacunas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-primary" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Edad Primera Mestruación")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Flujo Vaginal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Flujo Uretral")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Relaciones Sexuales")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("No. Compañeros Sexuales")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Usa Condon")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Abortos Antes de 6 Meses")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Embarazo en Adolecentes")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Metodo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Tiempo de Metodo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Controles Ultimo Año")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Motivo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Citologia Cervico Vaginal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Colposcopia")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Examen de seno")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Violencia Intrafamiliar")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("TD/IT")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Triple Viral")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Hijos Nacidos Vivos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Abortos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Examen de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Biposia de Prostata")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("GESTACIÓN PARTO Y POSTPARTO")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "28" }
          },
          [_vm._v("Gestión")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Parto")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "1" }
          },
          [_vm._v("PostParto")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "6" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Riesgo Materno")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Examen")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Habitos")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-info" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Aceptación del Embarazo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Control Prenatal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Atención del Parto")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("Carnet de Control Prenatal")]),
        _vm._v(" "),
        _c("td", [_vm._v("Fecha Ultima Mestruación")]),
        _vm._v(" "),
        _c("td", [_vm._v("Fecha Probable Parto")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Talla(cm)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("IMC/EG")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Gestación (Sem)")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("No. Controles Prenatales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Vih")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Toxoplasma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("V.D.R.L")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Odontologia")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Vacunación TD/IT")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Fecha Ultimo Parto")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Suplementación con Hierro")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Enfermedades Cronicas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Sedentarismo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Consumo SPA")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Consume Bebidas Alcoholicas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Tipo de Parto")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Atención Institucional")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Consulta de Control 8 Dias")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("Gestación")]),
        _vm._v(" "),
        _c("td", [_vm._v("Parto")]),
        _vm._v(" "),
        _c("td", [_vm._v("Postparto")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("ADOLESCENTES DE 12 A 17 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "12" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-warning",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "11" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("PB")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("De Conducta")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Enfermedad Cronica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Dientes Sanos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Consulta Odontologica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("SPA")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Desparacitado")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Empleo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Religión")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es VIH")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es Cancer de Utero")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es el Papiloma")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es el Cancer de Seno")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Padre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Madre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Hermanos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Conyugue")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("JUVENTUD, JOVENES DE 18 A 28 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "14" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Consumo Sustancias Psicoactivas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "5" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Habitos")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-success" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P. Cintura")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("PB")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("De Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Enfermedad Cronica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Dientes Sanos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("SPA")]),
        _vm._v(" "),
        _c("td", [_vm._v("Desparacitado")]),
        _vm._v(" "),
        _c("td", [_vm._v("Empleo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Religión")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es VIH")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es Cancer de Utero")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es el Papiloma")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("HOMBRES Y MUJERES DE 29 AÑOS A 59 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "14" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Consumo Sustancias Psicoactivas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Detección Temprana")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "5" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Habitos")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-success" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P. Cintura")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("PB")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("De Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Enfermedad Cronica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Dientes Sanos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("SPA")]),
        _vm._v(" "),
        _c("td", [_vm._v("Desparacitado")]),
        _vm._v(" "),
        _c("td", [_vm._v("Empleo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Examen de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Citologias")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Examen de MAMA")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("Religión")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es VIH")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es Cancer de Utero")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es el Papiloma")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("E. ADULTO MAYOR (HOMBRES Y MUJERES DE 60 AÑOS Y MAS)")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "5" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-warning",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "13" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Grupo de Ayudas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("PA")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Glicemia")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Cigarrillo ó Tabaco ")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Consumo de Alcohol")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Actividad Fisica Recreativa")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sintomático Respiratorio")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Examen de Seno")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Citologia Cervico Vaginal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Colposcopia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Examen de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Biposia de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Examen de Agudeza Visual")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Subsidio de Entidad del Estado")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Enfermedades Cronicas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Enfermedades Infecciosas")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("V. MORBILIDAD GENERAL")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "10px" }
        },
        [_vm._v("ENFERMEDAD CRONICA")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Enfermedad Cronica")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Nombre de la Enfermedad")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Diagnosticado Hace cuanto tiempo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Está en Tratamiento")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Complicaciones")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "10px" }
        },
        [_vm._v("ENFERMEDADES INFECCIOSAS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-brand",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Enfermedad Infecciosas")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Nombre de la Enfermedad")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Diagnosticado Hace cuanto tiempo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Está en Tratamiento")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Complicaciones")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("FACTORES DE RIESGO Y PROTECTORES DE LA FAMILIA")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "row" }, [
      _c("div", { staticClass: "col-md-12" }, [
        _c("div", { staticClass: "table-responsive" }, [
          _c("table", { staticClass: "table table-sm table-hover" }, [
            _c("thead", [
              _c("tr", [
                _c("th", {
                  staticClass: "kt-bg-fill-success",
                  staticStyle: {
                    "font-weight": "normal",
                    "vertical-align": "middle",
                    "text-align": "center",
                    "text-transform": "capitalize"
                  },
                  attrs: { colspan: "5" }
                }),
                _vm._v(" "),
                _c(
                  "th",
                  {
                    staticClass: "kt-bg-fill-danger",
                    staticStyle: {
                      "font-weight": "normal",
                      "vertical-align": "middle",
                      "text-align": "center",
                      "text-transform": "capitalize"
                    },
                    attrs: { colspan: "4" }
                  },
                  [_vm._v("Como Corrige Usted a Sus Hijos")]
                ),
                _vm._v(" "),
                _c(
                  "th",
                  {
                    staticClass: "kt-bg-fill-warning",
                    staticStyle: {
                      "font-weight": "normal",
                      "vertical-align": "middle",
                      "text-align": "center",
                      "text-transform": "capitalize"
                    },
                    attrs: { colspan: "4" }
                  },
                  [_vm._v("Adicciones")]
                ),
                _vm._v(" "),
                _c(
                  "th",
                  {
                    staticClass: "kt-bg-fill-brand",
                    staticStyle: {
                      "font-weight": "normal",
                      "vertical-align": "middle",
                      "text-align": "center",
                      "text-transform": "capitalize"
                    },
                    attrs: { colspan: "4" }
                  },
                  [_vm._v("Violencia Intrafamiliar")]
                ),
                _vm._v(" "),
                _c(
                  "th",
                  {
                    staticClass: "kt-bg-fill-dark",
                    staticStyle: {
                      "font-weight": "normal",
                      "vertical-align": "middle",
                      "text-align": "center",
                      "text-transform": "capitalize"
                    },
                    attrs: { colspan: "2" }
                  },
                  [_vm._v("Estilos de Vida Saludables")]
                ),
                _vm._v(" "),
                _c(
                  "th",
                  {
                    staticClass: "kt-bg-fill-danger",
                    staticStyle: {
                      "font-weight": "normal",
                      "vertical-align": "middle",
                      "text-align": "center",
                      "text-transform": "capitalize"
                    },
                    attrs: { colspan: "4" }
                  },
                  [_vm._v("Partiicipa en Grupos Organizados")]
                )
              ]),
              _vm._v(" "),
              _c("tr", { staticClass: "kt-bg-fill-warning" }, [
                _c("td", { staticClass: "kt-bg-fill-success" }, [
                  _vm._v("No.")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-success" }, [
                  _vm._v("Documento")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-success" }, [
                  _vm._v("Nombre")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-success" }, [
                  _vm._v("Sexo")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-success" }, [
                  _vm._v("Edad")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Dialogos")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Sanción ó Supresión")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Castigo Verbal")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Castigo Fisico")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-warning" }, [
                  _vm._v("Alcohol")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-warning" }, [
                  _vm._v("Tabaco")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-warning" }, [
                  _vm._v("Sustancias Psicoactivas")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-warning" }, [
                  _vm._v("Apuestas")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-brand" }, [
                  _vm._v("Violencia Fisica")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-brand" }, [
                  _vm._v("Violencia Psicologica")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-brand" }, [
                  _vm._v("Violencia Economica")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-brand" }, [
                  _vm._v("Abuso Sexual")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-dark" }, [
                  _vm._v("Actividad Fisica")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-dark" }, [
                  _vm._v("Consumo de Frutas y Verduras")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Religiosos")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Sociales")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Culturales")
                ]),
                _vm._v(" "),
                _c("td", { staticClass: "kt-bg-fill-danger" }, [
                  _vm._v("Recreativos")
                ])
              ])
            ])
          ])
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "kt-separator kt-separator--border-dashed" })
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("MIGRANTE")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "14" }
          },
          [_vm._v("Migrante")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "6" }
          },
          [_vm._v("Identificación")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "7" }
          },
          [_vm._v("Condicciones")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Pais de Origen")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Registrado Como Migrante")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Hace Cuanto Llego Al Pais")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("¿En el Futuro Usted Piensa?")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("¿Usted a Recibido Ayudas del Gobierno?")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Principal Necesidad en Estos Momnetos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Personas Que Dependen de Usted")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Ingreso Mensual Actualmente")
        ])
      ])
    ])
  }
]
render._withStripped = true



/***/ }),

/***/ "./resources/js/Servicios/barrios_servicios.js":
/*!*****************************************************!*\
  !*** ./resources/js/Servicios/barrios_servicios.js ***!
  \*****************************************************/
/*! exports provided: listarBarrios, guardarBarrios, eliminarBarrios, comboBarrios */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listarBarrios", function() { return listarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardarBarrios", function() { return guardarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminarBarrios", function() { return eliminarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comboBarrios", function() { return comboBarrios; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios', $data);
}
function guardarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/guardar', $data);
}
function eliminarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/eliminar', $data);
}
function comboBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/combo', $data);
}

/***/ }),

/***/ "./resources/js/Servicios/caracterizacion_servicios.js":
/*!*************************************************************!*\
  !*** ./resources/js/Servicios/caracterizacion_servicios.js ***!
  \*************************************************************/
/*! exports provided: listarCaracterizacion, nuevaCaracterizacion, guardar, validar, eliminarCaracterizacion, exportarCaracterizacion, exportarCaracterizacion2, validarJefe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listarCaracterizacion", function() { return listarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nuevaCaracterizacion", function() { return nuevaCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardar", function() { return guardar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validar", function() { return validar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminarCaracterizacion", function() { return eliminarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exportarCaracterizacion", function() { return exportarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exportarCaracterizacion2", function() { return exportarCaracterizacion2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validarJefe", function() { return validarJefe; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion', $data);
}
function nuevaCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('//caracterizacion/nuevo', $data);
}
function guardar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/guardar', $data);
}
function validar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/validar', $data);
}
function eliminarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/eliminar', $data);
}
function exportarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/exportar', $data);
}
function exportarCaracterizacion2($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/exportar2', $data);
}
function validarJefe($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/validarJefe', $data);
}

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue":
/*!*********************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ingreso.vue?vue&type=template&id=45771cc1& */ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&");
/* harmony import */ var _Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ingreso.vue?vue&type=script&lang=js& */ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Ingreso.vue?vue&type=style&index=0&lang=css& */ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["render"],
  _Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/Vistas/Caracterizacion/Ingreso.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&":
/*!**********************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&":
/*!******************************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css& ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/style-loader!../../../../node_modules/css-loader??ref--6-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--6-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=style&index=0&lang=css& */ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&":
/*!****************************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1& ***!
  \****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=template&id=45771cc1& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);